var documenterSearchIndex = {"docs":
[{"location":"man/reference.html#Types","page":"Reference","title":"Types","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"Documentation of types.","category":"page"},{"location":"man/reference.html#Functions","page":"Reference","title":"Functions","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"Documentation of functions.","category":"page"},{"location":"guide/guide.html#Guide","page":"How to guide","title":"Guide","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The FinEtoolsFlexStructures package is used to solve static and dynamic linear and nonlinear  problems involving beams and linear static and dynamic analysis of shells.","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The basic functionality is provided by the FinEtools package.","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"To understand how the package works, we would suggest inspecting the examples. The examples are organized by category: statics, dynamics, etc. There is usually an indication of what the correct answer should be (frequencies, deflections, buckling factors, ...). Many examples correspond to well-known benchmarks.","category":"page"},{"location":"index.html#FinEtoolsFlexStructures-Documentation","page":"Home","title":"FinEtoolsFlexStructures Documentation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"<!–- ## Tutorials","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The tutorials are provided in the form of Julia scripts and Markdown files in a separate package.  –->","category":"page"},{"location":"index.html#Manual","page":"Home","title":"Manual","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The description of the types and the functions, organized by module and/or other logical principle.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"man/types.md\",\n    \"man/functions.md\",\n]\nDepth = 2","category":"page"},{"location":"man/types.html#Types","page":"Types","title":"Types","text":"","category":"section"},{"location":"man/types.html#Table-of-Contents","page":"Types","title":"Table of Contents","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"CrossSectionModule types\nCompositeLayupModule types\nFESetShellT3Module types\nMeshFrameMemberModule types\nFEMMCorotBeamModule types\nFEMMShellT3FFModule types\nFEMMShellT3FFCompModule types\nFEMMPointMassModule types\nFEMMPointGroundedSpringModule types\nRotUtilModule types\nVisUtilModule types\nTransformerModule types","category":"page"},{"location":"man/types.html#CrossSectionModule-types","page":"Types","title":"CrossSectionModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.CrossSectionModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle-Tuple{Any, Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle","text":"CrossSectionCircle(radius, x1x2_vector, shear_resisting_area_factor = 6/7; label = 0)\n\nCreate a circular section for use with a Timoshenko model.\n\nCommonly accepted value is shear_resisting_area_factor = 6/7.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle-Tuple{Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle","text":"CrossSectionCircle(radius, x1x2_vector; label = 0)\n\nCreate a circular section for use with a Bernoulli model.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle-NTuple{4, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle","text":"CrossSectionRectangle(d2f, d3f, x1x2_vector; label = 0)\n\nCreate a rectangular section for use with a Timoshenko model.\n\nCommonly accepted value is shear_resisting_area_factor = 5/6.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle-Tuple{Any, Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle","text":"CrossSectionRectangle(d2f, d3f, x1x2_vector; label = 0)\n\nCreate a rectangular section for use with a Bernoulli model.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#CompositeLayupModule-types","page":"Types","title":"CompositeLayupModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.CompositeLayupModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup","page":"Types","title":"FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup","text":"CompositeLayup\n\nType for composite layup.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup-Tuple{Any, Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup","text":"CompositeLayup(name, plies, mcsys)\n\nCreate a composite layup.\n\nProvide the name, the array of plies, and the coordinate system that defines the orientation of the composite layup. The first base spector of this coordinate system is the reference direction for the layup.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CompositeLayupModule.Ply","page":"Types","title":"FinEtoolsFlexStructures.CompositeLayupModule.Ply","text":"Ply{M} <: AbstractPly\n\nType of a ply.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.CompositeLayupModule.Ply-Union{Tuple{M}, Tuple{Any, M, Any, Any}} where M","page":"Types","title":"FinEtoolsFlexStructures.CompositeLayupModule.Ply","text":"Ply{M} <: AbstractPly\n\nCreate a ply.\n\nProvide name, material of the ply, thickness of the ply, an angle between the first bases vector of the layup coordinate system and the first direction of the ply material coordinate system.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FESetShellT3Module-types","page":"Types","title":"FESetShellT3Module types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.FESetShellT3Module]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#MeshFrameMemberModule-types","page":"Types","title":"MeshFrameMemberModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.MeshFrameMemberModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FEMMCorotBeamModule-types","page":"Types","title":"FEMMCorotBeamModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.FEMMCorotBeamModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam","page":"Types","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam","text":"FEMMDeforLinear{MR<:AbstractDeforModelRed,  S<:AbstractFESet, F<:Function, M<:AbstractMatDeforLinearElastic} <: FEMMCorotBeam\n\nClass for linear deformation finite element modeling machine.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FEMMShellT3FFModule-types","page":"Types","title":"FEMMShellT3FFModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.FEMMShellT3FFModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","text":"FEMMShellT3FF{S<:AbstractFESet, F<:Function} <: AbstractFEMM\n\nClass for the finite element modeling machine of the T3 triangular Flat-Facet shell with the Discrete Shear Gap technology and a consistent handling of the normals. \n\nWith averaging of the transverse strain-displacement matrix or averaging of the transverse shear stiffness matrix to provide isotropic transverse shear response. \n\nAlso, the formulation is developed to correctly handle the coupling of twisting moments and transverse shear (such as in the twisted beam or the Raasch hook problems) by incorporating \"nodal\" normals.\n\nSome of the programming developed consistently with the paper\n\n[1] Cui et al, Analysis of plates and shells using an edge-based smoothed finite element method, Comput Mech (2010) 45:141–156 DOI 10.1007/s00466-009-0429-9\n\nThe stabilization factor of the shear term of\n\n[2] Mikko Lyly, Rolf Stenberg and Teemu Vihinen, A stable bilinear element for the Reissner-Mindlin plate model Computer Methods in Applied Mechanics and Engineering 110 (1993) 343-357 \n\nis incorporated. Refer to expressions (3.12) and (3.13).\n\nThe treatment of the transformation between the element and nodal coordinates is carried out using a clean alternative to the publication\n\n[3] Finite Elements in Analysis and Design 30 (1998) 235—242 The treatment of shell normals in ﬁnite element analysis Richard H. MacNeal, Charles T. Wilson, Robert L. Harder, Claus C. Hoﬀ The MacNeal-Schwendler Corporation, 815 Colorado Blvd., Los Angeles, CA 90041, USA\n\nThe formula for the element to nodal basis transformation is derived from the expression\n\n[theta]_n = [A]_E^T [theta]_e + [A_3,1:3]_E^T [alpha_3]_e\n\nby disconnecting the drilling degree of freedom from the bending degrees of freedom in the nodal basis.\n\nThe following features are incorporated to deal with nodal normals:\n\nNodal normals are averages of the normals of elements that meet at a node.\nA crease in the surface is taken into account. In that case the normal are not averaged across the crease. At the nodes along the crease every element uses the normal to its surface instead of the nodal normal.\n\nConfiguration:\n\nThese attributes of the FEMM can be set after it's been created.\n\ntransv_shear_formulation: which formulation for the transverse shear stiffness? \nFEMMShellT3FFModule.__TRANSV_SHEAR_FORMULATION_AVERAGE_B - averaged strains (default)\nFEMMShellT3FFModule.__TRANSV_SHEAR_FORMULATION_AVERAGE_K - averaged stiffness\ndrilling_stiffness_scale: multiplier of the generalized stiffness coefficient\nthreshold_angle: angle in degrees. If a nodal normal subtends angle bigger then this threshold, the nodal normal at that note is marked as invalid.\nmult_el_size: multiplier of the square of the element size, used to control transverse shear stiffness.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF-Union{Tuple{M}, Tuple{F}, Tuple{S}, Tuple{FinEtools.IntegDomainModule.IntegDomain{S, F}, FinEtools.CSysModule.CSys, M}} where {S<:FinEtools.FESetModule.AbstractFESet, F<:Function, M}","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","text":"FEMMShellT3FF(integdomain::IntegDomain{S, F}, mcsys::CSys, material::M) where {S<:AbstractFESet, F<:Function, M}\n\nConstructor of the T3FF shell FEMM.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FEMMShellT3FFCompModule-types","page":"Types","title":"FEMMShellT3FFCompModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.FEMMShellT3FFCompModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp","text":"FEMMShellT3FFComp{S<:AbstractFESet, F<:Function} <: AbstractFEMM\n\nClass for the finite element modeling machine of the T3 triangular Flat-Facet shell with the Discrete Shear Gap technology and a consistent handling of the normals. This formulation is suitable for modelling of COMPOSITE (layered) materials. \n\nFor details for the homogeneous-shell refer to FEMMShellT3FF.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp-Union{Tuple{F}, Tuple{S}, Tuple{FinEtools.IntegDomainModule.IntegDomain{S, F}, FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup}} where {S<:FinEtools.FESetModule.AbstractFESet, F<:Function}","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp","text":"FEMMShellT3FFComp(integdomain::IntegDomain{S, F}, layup::CompositeLayup) where {S<:AbstractFESet, F<:Function}\n\nConstructor of the T3FFComp shell FEMM. All elements use a single layup.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FEMMPointMassModule-types","page":"Types","title":"FEMMPointMassModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.FEMMPointMassModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMPointMassModule.FEMMPointMass","page":"Types","title":"FinEtoolsFlexStructures.FEMMPointMassModule.FEMMPointMass","text":"FEMMPointMass{S<:AbstractFESet}\n\nClass for linear deformation finite element modeling machine.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FEMMPointGroundedSpringModule-types","page":"Types","title":"FEMMPointGroundedSpringModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.FEMMPointGroundedSpringModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMPointGroundedSpringModule.FEMMPointGroundedSpring","page":"Types","title":"FinEtoolsFlexStructures.FEMMPointGroundedSpringModule.FEMMPointGroundedSpring","text":"FEMMPointGroundedSpring{S<:AbstractFESet}\n\nType for finite element modeling machine for grounded springs.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#RotUtilModule-types","page":"Types","title":"RotUtilModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.RotUtilModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#VisUtilModule-types","page":"Types","title":"VisUtilModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [Examples.VisUtilModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#TransformerModule-types","page":"Types","title":"TransformerModule types","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures.TransformerModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.TransformerModule.QEQTTransformer","page":"Types","title":"FinEtoolsFlexStructures.TransformerModule.QEQTTransformer","text":"QEQTTransformer\n\nQEQTTransformer of element matrices.\n\nA callable object: computes Q * E * Q^T, where E the element stiffness matrix, and Q is the transformation matrix.\n\nBuffers the intermediate result. Hence no allocation is incurred.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.TransformerModule.QEQTTransformer-Tuple{Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.TransformerModule.QEQTTransformer","text":"(o::QEQTTransformer)(E, Q)\n\nPerform the transformation on the matrix E with the transformation matrix Q: Ebar = Q * E * Q^T.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.TransformerModule.QTEQTransformer","page":"Types","title":"FinEtoolsFlexStructures.TransformerModule.QTEQTransformer","text":"QTEQTransformer\n\nQTEQTransformer of element matrices.\n\nA callable object: computes Q^T * E * Q, where E the element stiffness matrix, and Q is the transformation matrix.\n\nBuffers the intermediate result. Hence no allocation is incurred.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.TransformerModule.QTEQTransformer-Tuple{Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.TransformerModule.QTEQTransformer","text":"(o::QTEQTransformer)(E, Q)\n\nPerform the transformation on the matrix E with the transformation matrix Q: Ebar = Q^T * E * Q.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"man/functions.html#Table-of-Contents","page":"Functions","title":"Table of Contents","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"CrossSectionModule functions\nCompositeLayupModule functions\nFESetShellT3Module functions\nMeshFrameMemberModule functions\nFEMMCorotBeamModule functions\nFEMMShellT3FFModule functions\nFEMMShellT3FFCompModule functions\nFEMMPointMassModule functions\nFEMMPointGroundedSpringModule functions\nRotUtilModule functions\nVisUtilModule functions\nTransformerModule functions","category":"page"},{"location":"man/functions.html#CrossSectionModule-functions","page":"Functions","title":"CrossSectionModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.CrossSectionModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#CompositeLayupModule-functions","page":"Functions","title":"CompositeLayupModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.CompositeLayupModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.cartesian_csys-Tuple{Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.cartesian_csys","text":"cartesian_csys(axes)\n\nCreate a material Cartesian coordinate system.\n\naxes = tuple of signed labels of the axes. For instance, (1, 2, 3) creates a coordinate system identical to the global cartesian coordinate system. (2, 1, -3) creates a coordinate system so that the first material basis vector is along the second global basis vector, the second material basis vector is along the first global basis vector, and the third material basis vector is opposite to the third global basis vector.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.lamina_material-NTuple{6, Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.lamina_material","text":"lamina_material(E1, E2, nu12, G12, G13, G23)\n\nCreate a transversely isotropic lamina material with default (zero) mass density.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.lamina_material-NTuple{7, Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.lamina_material","text":"lamina_material(rho, E1, E2, nu12, G12, G13, G23)\n\nCreate a transversely isotropic lamina material.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.lamina_material-Tuple{Any, Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.lamina_material","text":"lamina_material(rho, E, nu)\n\nCreate an isotropic lamina material.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.lamina_material-Tuple{Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.lamina_material","text":"lamina_material(E, nu)\n\nCreate an isotropic lamina material with default (zero) mass density.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.laminate_stiffnesses!-Tuple{FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup, Any, Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.laminate_stiffnesses!","text":"laminate_stiffnesses!(cl::CompositeLayup, A, B, C)\n\nCompute the laminate stiffnesses, membrane, extension-bending coupling, and bending.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.laminate_transverse_stiffness!-Tuple{FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup, Any}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.laminate_transverse_stiffness!","text":"laminate_transverse_stiffness!(cl::CompositeLayup, H)\n\nComputed the laminate transverse stiffness.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_T_matrix!-Union{Tuple{T}, Tuple{Matrix{T}, Any}} where T","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_T_matrix!","text":"plane_stress_T_matrix!( Tinvm::Array{T, 2},\n angle) where {T}\n\nCompute the transformation matrix between strain tensor components on the layup coordinate system into the ply coordinate system.\n\nangle = angle between the first basis vector of the layup coordinate system     and the first basis vector of the ply coordinate system\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_T_matrix_eng!-Union{Tuple{T}, Tuple{Matrix{T}, Any}} where T","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_T_matrix_eng!","text":"plane_stress_T_matrix_eng!( Tinvm::Array{T, 2},\n angle) where {T}\n\nCompute the transformation matrix between strain engineering components on the layup coordinate system into the ply coordinate system.\n\nangle = angle between the first basis vector of the layup coordinate system     and the first basis vector of the ply coordinate system\n\nThe matrix of transformation is Tme = R * Tm / R, where Tm is the transformation matrix in tensor components, and R is the Reuter matrix, R = [1 0 0; 0 1 0; 0 0 2].\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_Tinv_matrix!-Union{Tuple{T}, Tuple{Matrix{T}, Any}} where T","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_Tinv_matrix!","text":"plane_stress_Tinv_matrix!(Tinvm::Array{T, 2}, angle) where {T}\n\nCompute the transformation matrix between strain tensor components on the ply coordinate system into the layout coordinate system.\n\nangle = angle between the first basis vector of the layup coordinate system     and the first basis vector of the ply coordinate system\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_Tinv_matrix_eng!-Union{Tuple{T}, Tuple{Matrix{T}, Any}} where T","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.plane_stress_Tinv_matrix_eng!","text":"plane_stress_Tinv_matrix!(Tinvm::Array{T, 2}, angle) where {T}\n\nCompute the transformation matrix between strain engineering components on the ply coordinate system into the layout coordinate system.\n\nangle = angle between the first basis vector of the layup coordinate system     and the first basis vector of the ply coordinate system\n\nThe matrix of transformation is Tme = R * Tm / R, where Tm is the transformation matrix in tensor components, and R is the Reuter matrix, R = [1 0 0; 0 1 0; 0 0 2].\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.thickness-Tuple{FinEtoolsFlexStructures.CompositeLayupModule.CompositeLayup}","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.thickness","text":"thickness(cl::CompositeLayup)\n\nCompute the thickness of the layup (some of the thicknesses of the plies).\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.transverse_shear_T_matrix!-Union{Tuple{T}, Tuple{Matrix{T}, Any, Any}} where T","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.transverse_shear_T_matrix!","text":"transverse_shear_T_matrix!(Tm::Array{T, 2}, m, n) where {T}\n\nCompute the transformation matrix for the transverse shear stiffness.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.CompositeLayupModule.transverse_shear_T_matrix!-Union{Tuple{T}, Tuple{Matrix{T}, Any}} where T","page":"Functions","title":"FinEtoolsFlexStructures.CompositeLayupModule.transverse_shear_T_matrix!","text":"transverse_shear_T_matrix!(Tm::Array{T, 2}, angle) where {T}\n\nCompute the transformation matrix for the transverse shear stiffness.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FESetShellT3Module-functions","page":"Functions","title":"FESetShellT3Module functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.FESetShellT3Module]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#MeshFrameMemberModule-functions","page":"Functions","title":"MeshFrameMemberModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.MeshFrameMemberModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtoolsFlexStructures.MeshFrameMemberModule.frame_member-Tuple{Any, Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.MeshFrameMemberModule.frame_member","text":"frame_member(xyz, nL, crosssection; label = 0)\n\nMesh of a generally curved beam member given by the location of the vertices of the spline curve.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.MeshFrameMemberModule.fuse_members-Tuple{Any}","page":"Functions","title":"FinEtoolsFlexStructures.MeshFrameMemberModule.fuse_members","text":"fuse_members(members; tolerance = 0.001)\n\nFuse members by merging the meshes for the members.\n\nComputes an array of meshes.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.MeshFrameMemberModule.merge_members-Tuple{Any}","page":"Functions","title":"FinEtoolsFlexStructures.MeshFrameMemberModule.merge_members","text":"merge_members(members; tolerance = 0.001)\n\nMerge together meshes of the members.\n\nUses fuse_members to merge the nodes, then concatenates the finite elements.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FEMMCorotBeamModule-functions","page":"Functions","title":"FEMMCorotBeamModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.FEMMCorotBeamModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.distribloads_global-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}, Any}} where {ASS<:FinEtools.AssemblyModule.AbstractSysvecAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.distribloads_global","text":"distribloads_global(self::FEMMCorotBeam, geom0::NodalField{FFlt}, u1::NodalField{T}, Rfield1::NodalField{T}, dchi::NodalField{T}, fi) where {T<:Number}\n\nCompute the load vector due to distributed loads.\n\nCompute the global load vector corresponding to applied distributed load. Here it means force per unit length of the beam, in the configuration u1,Rfield1.\n\nNote: the force intensity must be uniform across the entire element. Note: the force intensity is given in the global coordinates.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.geostiffness-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.geostiffness","text":"geostiffness(self::FEMMCorotBeam, assembler::ASS, geom0::NodalField{FFlt}, u1::NodalField{T}, Rfield1::NodalField{T}, dchi::NodalField{T}) where {ASS<:AbstractSysmatAssembler, T<:Number}\n\nCompute the geometric stiffness matrix.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.gyroscopic-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.gyroscopic","text":"gyroscopic(self::FEMMCorotBeam,  assembler::A,\n  geom::NodalField{FFlt},\n  u::NodalField{T}) where {A<:AbstractSysmatAssembler, T<:Number}\n\nCompute the quadratic-inertial-term (gyroscopic) mass matrix\n\nThis is a general routine for the abstract linear-deformation  FEMM.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.mass-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.mass","text":"mass(self::FEMMCorotBeam,  assembler::A,\n  geom::NodalField{FFlt},\n  u::NodalField{T}) where {A<:AbstractSysmatAssembler, T<:Number}\n\nCompute the consistent mass matrix\n\nThis is a general routine for the abstract linear-deformation  FEMM.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.restoringforce-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysvecAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.restoringforce","text":"restoringforce(self::FEMMCorotBeam, assembler::ASS, geom0::NodalField{FFlt}, u1::NodalField{T}, Rfield1::NodalField{T}, dchi::NodalField{T}) where {ASS<:AbstractSysmatAssembler, T<:Number}\n\nCompute the vector of the restoring elastic forces\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMCorotBeamModule.stiffness-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMCorotBeamModule.FEMMCorotBeam, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMCorotBeamModule.stiffness","text":"stiffness(self::FEMMCorotBeam, assembler::ASS, geom0::NodalField{FFlt}, u1::NodalField{T}, Rfield1::NodalField{T}, dchi::NodalField{T}) where {ASS<:AbstractSysmatAssembler, T<:Number}\n\nCompute the material stiffness matrix.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FEMMShellT3FFModule-functions","page":"Functions","title":"FEMMShellT3FFModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.FEMMShellT3FFModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtools.FEMMBaseModule.associategeometry!-Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, FinEtools.NodalFieldModule.NodalField{Float64}}","page":"Functions","title":"FinEtools.FEMMBaseModule.associategeometry!","text":"associategeometry!(self::FEMMShellT3FF,  geom::NodalField{FFlt})\n\nAssociate geometry with the FEMM. \n\nIn this case it means evaluate the nodal normals.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtools.FEMMBaseModule.inspectintegpoints-Union{Tuple{F}, Tuple{TI}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{Float64}, Vector{Int64}, F, Any}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{Float64}, Vector{Int64}, F, Any, Any}} where {TI<:Number, F<:Function}","page":"Functions","title":"FinEtools.FEMMBaseModule.inspectintegpoints","text":"inspectintegpoints(self::AbstractFEMMDeforLinear,\n  geom::NodalField{FFlt},  u::NodalField{TI},\n  dT::NodalField{FFlt},\n  felist::FIntVec,\n  inspector::F,  idat, quantity=:Cauchy;\n  context...) where {TI<:Number, F<:Function}\n\nInspect integration point quantities.\n\ngeom - reference geometry field\nu - displacement+rotation field\ndT - temperature difference field\nfelist - indexes of the finite elements that are to be inspected:    The fes to be included are: fes[felist].\ncontext    - structure: see the update!() method of the material.\ninspector - function with the signature       idat = inspector(idat, j, conn, x, out, loc);  where   idat - a structure or an array that the inspector may          use to maintain some state,  for instance minimum or maximum of          stress, j is the element number, conn is the element connectivity,          out is the output of the update!() method,  loc is the location          of the integration point in the reference configuration.\n\nReturn\n\nThe updated inspector data is returned.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.make-Tuple{Any, Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.make","text":"make(integdomain, mcsys, material)\n\nMake a T3FF FEMM from the integration domain, a coordinate system to define the orientation of the normals, and a material.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.make-Tuple{Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.make","text":"make(integdomain, mcsys, material)\n\nMake a T3FF FEMM from the integration domain,  and a material. Default isoparametric method for computing the normals is used.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.mass-Union{Tuple{TI}, Tuple{A}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, A, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}}} where {A<:FinEtools.AssemblyModule.AbstractSysmatAssembler, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.mass","text":"mass(self::FEMMShellT3FF,  assembler::A,  geom::NodalField{FFlt}, dchi::NodalField{TI}) where {A<:AbstractSysmatAssembler, TI<:Number}\n\nCompute the diagonal (lumped) mass matrix\n\nThe mass matrix can be expected to be non-singular.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.num_normals-Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.num_normals","text":"num_normals(self::FEMMShellT3FF)\n\nCompute the summary of the nodal normals.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.stiffness-Union{Tuple{TI}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.stiffness","text":"stiffness(self::FEMMShellT3FF, assembler::ASS, geom0::NodalField{FFlt}, u1::NodalField{TI}, Rfield1::NodalField{TI}, dchi::NodalField{TI}) where {ASS<:AbstractSysmatAssembler, TI<:Number}\n\nCompute the material stiffness matrix.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FEMMShellT3FFCompModule-functions","page":"Functions","title":"FEMMShellT3FFCompModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.FEMMShellT3FFCompModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtools.FEMMBaseModule.associategeometry!-Tuple{FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp, FinEtools.NodalFieldModule.NodalField{Float64}}","page":"Functions","title":"FinEtools.FEMMBaseModule.associategeometry!","text":"associategeometry!(self::FEMMShellT3FFComp,  geom::NodalField{FFlt})\n\nAssociate geometry with the FEMM. \n\nIn this case it means evaluate the nodal normals.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtools.FEMMBaseModule.inspectintegpoints-Union{Tuple{F}, Tuple{TI}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{Float64}, Vector{Int64}, F, Any}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{Float64}, Vector{Int64}, F, Any, Any}} where {TI<:Number, F<:Function}","page":"Functions","title":"FinEtools.FEMMBaseModule.inspectintegpoints","text":"inspectintegpoints(self::AbstractFEMMDeforLinear,\n  geom::NodalField{FFlt},  u::NodalField{TI},\n  dT::NodalField{FFlt},\n  felist::FIntVec,\n  inspector::F,  idat, quantity=:Cauchy;\n  context...) where {TI<:Number, F<:Function}\n\nInspect integration point quantities.\n\ngeom - reference geometry field\nu - displacement+rotation field\ndT - temperature difference field\nfelist - indexes of the finite elements that are to be inspected:    The fes to be included are: fes[felist].\ncontext    - structure: see the update!() method of the material.\ninspector - function with the signature       idat = inspector(idat, j, conn, x, out, loc);  where   idat - a structure or an array that the inspector may          use to maintain some state,  for instance minimum or maximum of          stress, j is the element number, conn is the element connectivity,          out is the output of the update!() method,  loc is the location          of the integration point in the reference configuration.\n\nReturn\n\nThe updated inspector data is returned.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFCompModule.make-Tuple{Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFCompModule.make","text":"make(integdomain, layup)\n\nMake a T3FFComp FEMM from the integration domain and a composite layup.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFCompModule.mass-Union{Tuple{TI}, Tuple{A}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp, A, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}}} where {A<:FinEtools.AssemblyModule.AbstractSysmatAssembler, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFCompModule.mass","text":"mass(self::FEMMShellT3FFComp,  assembler::A,  geom::NodalField{FFlt}, dchi::NodalField{TI}) where {A<:AbstractSysmatAssembler, TI<:Number}\n\nCompute the diagonal (lumped) mass matrix\n\nThe mass matrix can be expected to be non-singular.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFCompModule.num_normals-Tuple{FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFCompModule.num_normals","text":"num_normals(self::FEMMShellT3FFComp)\n\nCompute the summary of the nodal normals.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFCompModule.stiffness-Union{Tuple{TI}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFCompModule.FEMMShellT3FFComp, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFCompModule.stiffness","text":"stiffness(self::FEMMShellT3FFComp, assembler::ASS, geom0::NodalField{FFlt}, u1::NodalField{TI}, Rfield1::NodalField{TI}, dchi::NodalField{TI}) where {ASS<:AbstractSysmatAssembler, TI<:Number}\n\nCompute the material stiffness matrix.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FEMMPointMassModule-functions","page":"Functions","title":"FEMMPointMassModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.FEMMPointMassModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMPointMassModule.mass-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMPointMassModule.FEMMPointMass, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMPointMassModule.mass","text":"mass(self::FEMMCorotBeam,  assembler::A,\n  geom::NodalField{FFlt},\n  u::NodalField{T}) where {A<:AbstractSysmatAssembler, T<:Number}\n\nCompute the consistent mass matrix\n\nThis is a general routine for the abstract linear-deformation  FEMM.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FEMMPointGroundedSpringModule-functions","page":"Functions","title":"FEMMPointGroundedSpringModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.FEMMPointGroundedSpringModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMPointGroundedSpringModule.stiffness-Union{Tuple{TI}, Tuple{T}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMPointGroundedSpringModule.FEMMPointGroundedSpring, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{T}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, T<:Number, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMPointGroundedSpringModule.stiffness","text":"mass(self::FEMMCorotBeam,  assembler::A,\n  geom::NodalField{FFlt},\n  u::NodalField{T}) where {A<:AbstractSysmatAssembler, T<:Number}\n\nCompute the stiffness matrix\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#RotUtilModule-functions","page":"Functions","title":"RotUtilModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.RotUtilModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtoolsFlexStructures.RotUtilModule.initial_Rfield-Tuple{Any}","page":"Functions","title":"FinEtoolsFlexStructures.RotUtilModule.initial_Rfield","text":"initial_Rfield(fens)\n\nSet up initial rotation field (rotation matrices are all identities)\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.RotUtilModule.update_rotation_field!-Tuple{Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.RotUtilModule.update_rotation_field!","text":"update_rotation_field!(Rfield, dchi)\n\nUpdate rotation field by exponential incremental rotation. \n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#VisUtilModule-functions","page":"Functions","title":"VisUtilModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [Examples.VisUtilModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#TransformerModule-functions","page":"Functions","title":"TransformerModule functions","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures.TransformerModule]\nPrivate = true\nOrder = [:function]","category":"page"}]
}
