var documenterSearchIndex = {"docs":
[{"location":"man/reference.html#Types","page":"Reference","title":"Types","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"Documentation of types.","category":"page"},{"location":"man/reference.html#Functions","page":"Reference","title":"Functions","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"Documentation of functions.","category":"page"},{"location":"guide/guide.html#Guide","page":"How to guide","title":"Guide","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The FinEtoolsFlexStructures package is used to solve static and dynamic linear and nonlinear  problems involving beams and linear static and dynamic analysis of shells.","category":"page"},{"location":"index.html#FinEtoolsFlexStructures-Documentation","page":"Home","title":"FinEtoolsFlexStructures Documentation","text":"","category":"section"},{"location":"index.html#Tutorials","page":"Home","title":"Tutorials","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The tutorials are provided in the form of Julia scripts and Markdown files in a separate package. ","category":"page"},{"location":"index.html#Manual","page":"Home","title":"Manual","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The description of the types and the functions, organized by module and/or other logical principle.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"man/types.md\",\n    \"man/functions.md\",\n]\nDepth = 2","category":"page"},{"location":"index.html#Conceptual-guide","page":"Home","title":"Conceptual guide","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The construction of the toolkit is described: the composition of modules, the basic data structures, the methodology of computing quantities required in the finite element methodology, and more.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"guide/guide.md\",\n]\nDepth = 1","category":"page"},{"location":"man/types.html#Types","page":"Types","title":"Types","text":"","category":"section"},{"location":"man/types.html#CrossSectionModule","page":"Types","title":"CrossSectionModule","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures, FinEtoolsFlexStructures.CrossSectionModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle-Tuple{Any, Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle","text":"CrossSectionCircle(radius, x1x2_vector, shear_resisting_area_factor = 6/7; label = 0)\n\nCreate a circular section for use with a Timoshenko model.\n\nCommonly accepted value is shear_resisting_area_factor = 6/7.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle-Tuple{Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionCircle","text":"CrossSectionCircle(radius, x1x2_vector; label = 0)\n\nCreate a circular section for use with a Bernoulli model.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle-NTuple{4, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle","text":"CrossSectionRectangle(d2f, d3f, x1x2_vector; label = 0)\n\nCreate a rectangular section for use with a Timoshenko model.\n\nCommonly accepted value is shear_resisting_area_factor = 5/6.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle-Tuple{Any, Any, Any}","page":"Types","title":"FinEtoolsFlexStructures.CrossSectionModule.CrossSectionRectangle","text":"CrossSectionRectangle(d2f, d3f, x1x2_vector; label = 0)\n\nCreate a rectangular section for use with a Bernoulli model.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FEMMShellT3FFModule","page":"Types","title":"FEMMShellT3FFModule","text":"","category":"section"},{"location":"man/types.html","page":"Types","title":"Types","text":"Modules = [FinEtoolsFlexStructures, FinEtoolsFlexStructures.FEMMShellT3FFModule]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","text":"FEMMShellT3FF{S<:AbstractFESet, F<:Function} <: AbstractFEMM\n\nClass for the finite element modeling machine of the Flat-Facet shell with the Discrete Shear Gap technology and a consistent handling of the normals. \n\nWith averaging of the transverse strain-displacement matrix or averaging of the transverse shear stiffness matrix to provide isotropic transverse shear response. \n\nAlso, the formulation is developed to correctly handle the coupling of twisting moments and transverse shear (such as in the twisted beam or the Raasch hook problems) by incorporating \"nodal\" normals.\n\nSome of the programming developed consistently with the paper\n\n[1] Cui et al, Analysis of plates and shells using an edge-based smoothed finite element method, Comput Mech (2010) 45:141–156 DOI 10.1007/s00466-009-0429-9\n\nThe stabilization factor of the shear term of\n\n[2] Mikko Lyly, Rolf Stenberg and Teemu Vihinen, A stable bilinear element for the Reissner-Mindlin plate model Computer Methods in Applied Mechanics and Engineering 110 (1993) 343-357 \n\nis incorporated. Refer to expressions (3.12) and (3.13).\n\nThe treatment of the transformation between the element and nodal coordinates is carried out using a clean alternative to the publication\n\n[3] Finite Elements in Analysis and Design 30 (1998) 235—242 The treatment of shell normals in ﬁnite element analysis Richard H. MacNeal, Charles T. Wilson, Robert L. Harder, Claus C. Hoﬀ The MacNeal-Schwendler Corporation, 815 Colorado Blvd., Los Angeles, CA 90041, USA\n\nThe formula for the element to nodal basis transformation is derived from the expression\n\n[theta]_n = [A]_E^T [theta]_e + [A_3,1:3]_E^T [alpha_3]_e\n\nby disconnecting the drilling degree of freedom from the bending degrees of freedom in the nodal basis.\n\nThe following features are incorporated to deal with nodal normals:\n\nNodal normals are averages of the normals of elements that meet at a node.\nA crease in the surface is take into account. In that case the normal are not averaged across the crease. At the nodes along the crease every element uses the normal to its surface instead of the nodal normal.\n\nConfiguration:\n\nThese attributes of the FEMM can be set after it's been created.\n\ntransv_shear_formulation: which formulation for the transverse shear stiffness? \nFEMMShellT3FFModule.__TRANSV_SHEAR_FORMULATION_AVERAGE_B - averaged strains\nFEMMShellT3FFModule.__TRANSV_SHEAR_FORMULATION_AVERAGE_K - averaged stiffness\ndrilling_stiffness_scale: multiplier of the generalized stiffness coefficient\nthreshold_angle: angle in degrees. If a nodal normal subtends angle bigger then this threshold, the nodal normal at that note is marked as invalid.\nmult_el_size: multiplier of the square of the element size, used to control transverse shear stiffness.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF-Union{Tuple{M}, Tuple{F}, Tuple{S}, Tuple{FinEtools.IntegDomainModule.IntegDomain{S, F}, FinEtools.CSysModule.CSys, M}} where {S<:FinEtools.FESetModule.AbstractFESet, F<:Function, M}","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","text":"FEMMShellT3FF(integdomain::IntegDomain{S, F}, mcsys::CSys, material::M) where {S<:AbstractFESet, F<:Function, M}\n\nConstructor of the T3FF shell FEMM.\n\n\n\n\n\n","category":"method"},{"location":"man/types.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF-Union{Tuple{M}, Tuple{F}, Tuple{S}, Tuple{FinEtools.IntegDomainModule.IntegDomain{S, F}, M}} where {S<:FinEtools.FESetModule.AbstractFESet, F<:Function, M}","page":"Types","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF","text":"make(integdomain, mcsys, material)\n\nMake a T3FF FEMM from the integration domain,  and a material. Default isoparametric method for computing the normals is used.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"man/functions.html#CrossSectionModule","page":"Functions","title":"CrossSectionModule","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures, FinEtoolsFlexStructures.CrossSectionModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FEMMShellT3FFModule","page":"Functions","title":"FEMMShellT3FFModule","text":"","category":"section"},{"location":"man/functions.html","page":"Functions","title":"Functions","text":"Modules = [FinEtoolsFlexStructures, FinEtoolsFlexStructures.FEMMShellT3FFModule]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/functions.html#FinEtools.FEMMBaseModule.associategeometry!-Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, FinEtools.NodalFieldModule.NodalField{Float64}}","page":"Functions","title":"FinEtools.FEMMBaseModule.associategeometry!","text":"associategeometry!(self::FEMMShellT3FF,  geom::NodalField{FFlt})\n\nAssociate geometry with the FEMM. \n\nIn this case it means evaluate the nodal normals.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtools.FEMMBaseModule.inspectintegpoints-Union{Tuple{F}, Tuple{TI}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{Float64}, Vector{Int64}, F, Any}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{Float64}, Vector{Int64}, F, Any, Any}} where {TI<:Number, F<:Function}","page":"Functions","title":"FinEtools.FEMMBaseModule.inspectintegpoints","text":"inspectintegpoints(self::AbstractFEMMDeforLinear,\n  geom::NodalField{FFlt},  u::NodalField{TI},\n  dT::NodalField{FFlt},\n  felist::FIntVec,\n  inspector::F,  idat, quantity=:Cauchy;\n  context...) where {TI<:Number, F<:Function}\n\nInspect integration point quantities.\n\ngeom - reference geometry field\nu - displacement+rotation field\ndT - temperature difference field\nfelist - indexes of the finite elements that are to be inspected:    The fes to be included are: fes[felist].\ncontext    - structure: see the update!() method of the material.\ninspector - function with the signature       idat = inspector(idat, j, conn, x, out, loc);  where   idat - a structure or an array that the inspector may          use to maintain some state,  for instance minimum or maximum of          stress, j is the element number, conn is the element connectivity,          out is the output of the update!() method,  loc is the location          of the integration point in the reference configuration.\n\nReturn\n\nThe updated inspector data is returned.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.make-Tuple{Any, Any, Any}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.make","text":"make(integdomain, mcsys, material)\n\nMake a T3FF FEMM from the integration domain, a coordinate system to define the orientation of the normals, and a material.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.mass-Union{Tuple{TI}, Tuple{A}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, A, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}}} where {A<:FinEtools.AssemblyModule.AbstractSysmatAssembler, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.mass","text":"mass(self::FEMMShellT3FF,  assembler::A,  geom::NodalField{FFlt}, dchi::NodalField{TI}) where {A<:AbstractSysmatAssembler, TI<:Number}\n\nCompute the diagonal (lumped) mass matrix\n\nThe mass matrix can be expected to be non-singular.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.num_normals-Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.num_normals","text":"num_normals(self::FEMMShellT3FF)\n\nCompute the summary of the nodal normals.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#FinEtoolsFlexStructures.FEMMShellT3FFModule.stiffness-Union{Tuple{TI}, Tuple{ASS}, Tuple{FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF, ASS, FinEtools.NodalFieldModule.NodalField{Float64}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{TI}, FinEtools.NodalFieldModule.NodalField{TI}}} where {ASS<:FinEtools.AssemblyModule.AbstractSysmatAssembler, TI<:Number}","page":"Functions","title":"FinEtoolsFlexStructures.FEMMShellT3FFModule.stiffness","text":"stiffness(self::FEMMShellT3FF, assembler::ASS, geom0::NodalField{FFlt}, u1::NodalField{TI}, Rfield1::NodalField{TI}, dchi::NodalField{TI}) where {ASS<:AbstractSysmatAssembler, TI<:Number}\n\nCompute the material stiffness matrix.\n\n\n\n\n\n","category":"method"}]
}
