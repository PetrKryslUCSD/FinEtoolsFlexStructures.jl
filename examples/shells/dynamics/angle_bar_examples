                                                                                                          
pkonl@Hedwig MINGW64 ~/Documents/00WIP/FinEtoolsFlexStructures.jl (main)                                  
$ julia -t 1                                                                                              
  Activating project at `C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl`                       
┌ Warning: The active manifest file is an older format with no julia version entry. Dependencies may have 
been resolved with a different julia version.                                                             
└ @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\Manifest.toml:0                             
               _                                                                                          
   _       _ _(_)_     |  Documentation: https://docs.julialang.org                                       
  (_)     | (_) (_)    |                                                                                  
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.                                           
  | | | | | | |/ _` |  |                                                                                  
  | | |_| | | | (_| |  |  Version 1.7.1 (2021-12-22)                                                      
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release                                         
|__/                   |                                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
[ Info: Precompiling FinEtoolsFlexStructures [723391e6-6814-4d1d-921c-018f691214d8]                       
ERROR: LoadError: ArgumentError: Package PlotlyJS not found in current path:                              
- Run `import Pkg; Pkg.add("PlotlyJS")` to install the PlotlyJS package.                                  
                                                                                                          
Stacktrace:                                                                                               
 [1] require(into::Module, mod::Symbol)                                                                   
   @ Base .\loading.jl:967                                                                                
 [2] include(fname::String)                                                                               
   @ Base.MainInclude .\client.jl:451                                                                     
 [3] top-level scope                                                                                      
   @ REPL[1]:1                                                                                            
in expression starting at C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynami​‌​
cs\clamp_cyl_forc_damp_expl_examples.jl:1                                                                 
                                                                                                          
julia>                                                                                                    
                                                                                                          
pkonl@Hedwig MINGW64 ~/Documents/00WIP/FinEtoolsFlexStructures.jl (main)                                  
$ cd examples/                                                                                            
                                                                                                          
pkonl@Hedwig MINGW64 ~/Documents/00WIP/FinEtoolsFlexStructures.jl/examples (main)                         
$ julia -t 1                                                                                              
  Activating project at `C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples`              
┌ Warning: The active manifest file is an older format with no julia version entry. Dependencies may have 
been resolved with a different julia version.                                                             
└ @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\Manifest.toml:0                    
               _                                                                                          
   _       _ _(_)_     |  Documentation: https://docs.julialang.org                                       
  (_)     | (_) (_)    |                                                                                  
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.                                           
  | | | | | | |/ _` |  |                                                                                  
  | | |_| | | | (_| |  |  Version 1.7.1 (2021-12-22)                                                      
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release                                         
|__/                   |                                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 1040 nodes, 2048 elements                                                                    
perm = symrcm(C) = [1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 10​‌​
40, 1025, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1009, 
994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 993, 978, 979, 980, 98​‌​
1, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 977, 962, 963, 964, 965, 966, 967, 968, 969, 970​‌​
, 971, 972, 973, 974, 975, 976, 961, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959,​‌​
 960, 945, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 929, 914, 915, 916, 
917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 913, 898, 899, 900, 901, 902, 903, 904, 905, 9​‌​
06, 907, 908, 909, 910, 911, 912, 897, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 89​‌​
5, 896, 881, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 865, 850, 851, 852​‌​
, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 849, 834, 835, 836, 837, 838, 839, 840, 841,​‌​
 842, 843, 844, 845, 846, 847, 848, 833, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 
831, 832, 817, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 801, 786, 787, 7​‌​
88, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 785, 770, 771, 772, 773, 774, 775, 776, 77​‌​
7, 778, 779, 780, 781, 782, 783, 784, 769, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766​‌​
, 767, 768, 753, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 737, 722, 723,​‌​
 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 721, 706, 707, 708, 709, 710, 711, 712, 
713, 714, 715, 716, 717, 718, 719, 720, 705, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 7​‌​
02, 703, 704, 689, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 673, 658, 65​‌​
9, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 657, 642, 643, 644, 645, 646, 647, 648​‌​
, 649, 650, 651, 652, 653, 654, 655, 656, 641, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637,​‌​
 638, 639, 640, 625, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 609, 594, 
595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 593, 578, 579, 580, 581, 582, 583, 5​‌​
84, 585, 586, 587, 588, 589, 590, 591, 592, 577, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 57​‌​
3, 574, 575, 576, 561, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 545, 530​‌​
, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 529, 514, 515, 516, 517, 518, 519,​‌​
 520, 521, 522, 523, 524, 525, 526, 527, 528, 513, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 
509, 510, 511, 512, 497, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 481, 4​‌​
66, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 465, 450, 451, 452, 453, 454, 45​‌​
5, 456, 457, 458, 459, 460, 461, 462, 463, 464, 449, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444​‌​
, 445, 446, 447, 448, 433, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 417,​‌​
 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 401, 386, 387, 388, 389, 390, 
391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 385, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 3​‌​
80, 381, 382, 383, 384, 369, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 35​‌​
3, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 337, 322, 323, 324, 325, 326​‌​
, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 321, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315,​‌​
 316, 317, 318, 319, 320, 305, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 
289, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 273, 258, 259, 260, 261, 2​‌​
62, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 257, 242, 243, 244, 245, 246, 247, 248, 249, 250, 25​‌​
1, 252, 253, 254, 255, 256, 241, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240​‌​
, 225, 211, 210, 195, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 209, 196, 180, 194,​‌​
 179, 164, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 193, 181, 165, 149, 178, 163, 148, 
133, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 177, 166, 150, 134, 118, 162, 147, 132, 117, 1​‌​
02, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 161, 151, 135, 119, 103, 87, 146, 131, 116, 101, 86,​‌​
 71, 152, 153, 154, 155, 156, 157, 158, 159, 160, 145, 136, 120, 104, 88, 72, 56, 130, 115, 100, 85, 70, 5​‌​
5, 40, 137, 138, 139, 140, 141, 142, 143, 144, 129, 121, 105, 89, 73, 57, 41, 25, 114, 99, 84, 69, 54, 39,​‌​
 24, 9, 122, 123, 124, 125, 126, 127, 128, 113, 106, 90, 74, 58, 42, 26, 10, 98, 83, 68, 53, 38, 23, 8, 10​‌​
7, 108, 109, 110, 111, 112, 97, 91, 75, 59, 43, 27, 11, 82, 67, 52, 37, 22, 7, 92, 93, 94, 95, 96, 81, 76,​‌​
 60, 44, 28, 12, 66, 51, 36, 21, 6, 77, 78, 79, 80, 65, 61, 45, 29, 13, 50, 35, 20, 5, 62, 63, 64, 49, 46,​‌​
 30, 14, 34, 19, 4, 47, 48, 33, 31, 15, 18, 3, 32, 17, 16, 2, 1]                                          
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀│                                                                  
   6048 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣦│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀6048⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀249581 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 1040 nodes, 2048 elements                                                                    
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⣄⠀│                                                                  
   6048 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀6048⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀249581 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 264 nodes, 512 elements                                                                      
dchi.dofnums = [0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0;​‌​
 0 0 0 0 0 0; 1 2 3 4 5 6; 7 8 9 10 11 12; 13 14 15 16 17 18; 19 20 21 22 23 24; 25 26 27 28 29 30; 31 32 
33 34 35 36; 37 38 39 40 41 42; 43 44 45 46 47 48; 49 50 51 52 53 54; 55 56 57 58 59 60; 61 62 63 64 65 66​‌​
; 67 68 69 70 71 72; 73 74 75 76 77 78; 79 80 81 82 83 84; 85 86 87 88 89 90; 91 92 93 94 95 96; 97 98 99 
100 101 102; 103 104 105 106 107 108; 109 110 111 112 113 114; 115 116 117 118 119 120; 121 122 123 124 12​‌​
5 126; 127 128 129 130 131 132; 133 134 135 136 137 138; 139 140 141 142 143 144; 145 146 147 148 149 150;​‌​
 151 152 153 154 155 156; 157 158 159 160 161 162; 163 164 165 166 167 168; 169 170 171 172 173 174; 175 1​‌​
76 177 178 179 180; 181 182 183 184 185 186; 187 188 189 190 191 192; 193 194 195 196 197 198; 199 200 201​‌​
 202 203 204; 205 206 207 208 209 210; 211 212 213 214 215 216; 217 218 219 220 221 222; 223 224 225 226 2​‌​
27 228; 229 230 231 232 233 234; 235 236 237 238 239 240; 241 242 243 244 245 246; 247 248 249 250 251 252​‌​
; 253 254 255 256 257 258; 259 260 261 262 263 264; 265 266 267 268 269 270; 271 272 273 274 275 276; 277 
278 279 280 281 282; 283 284 285 286 287 288; 289 290 291 292 293 294; 295 296 297 298 299 300; 301 302 30​‌​
3 304 305 306; 307 308 309 310 311 312; 313 314 315 316 317 318; 319 320 321 322 323 324; 325 326 327 328 
329 330; 331 332 333 334 335 336; 337 338 339 340 341 342; 343 344 345 346 347 348; 349 350 351 352 353 35​‌​
4; 355 356 357 358 359 360; 361 362 363 364 365 366; 367 368 369 370 371 372; 373 374 375 376 377 378; 379​‌​
 380 381 382 383 384; 385 386 387 388 389 390; 391 392 393 394 395 396; 397 398 399 400 401 402; 403 404 4​‌​
05 406 407 408; 409 410 411 412 413 414; 415 416 417 418 419 420; 421 422 423 424 425 426; 427 428 429 430​‌​
 431 432; 433 434 435 436 437 438; 439 440 441 442 443 444; 445 446 447 448 449 450; 451 452 453 454 455 4​‌​
56; 457 458 459 460 461 462; 463 464 465 466 467 468; 469 470 471 472 473 474; 475 476 477 478 479 480; 48​‌​
1 482 483 484 485 486; 487 488 489 490 491 492; 493 494 495 496 497 498; 499 500 501 502 503 504; 505 506 
507 508 509 510; 511 512 513 514 515 516; 517 518 519 520 521 522; 523 524 525 526 527 528; 529 530 531 53​‌​
2 533 534; 535 536 537 538 539 540; 541 542 543 544 545 546; 547 548 549 550 551 552; 553 554 555 556 557 
558; 559 560 561 562 563 564; 565 566 567 568 569 570; 571 572 573 574 575 576; 577 578 579 580 581 582; 5​‌​
83 584 585 586 587 588; 589 590 591 592 593 594; 595 596 597 598 599 600; 601 602 603 604 605 606; 607 608​‌​
 609 610 611 612; 613 614 615 616 617 618; 619 620 621 622 623 624; 625 626 627 628 629 630; 631 632 633 6​‌​
34 635 636; 637 638 639 640 641 642; 643 644 645 646 647 648; 649 650 651 652 653 654; 655 656 657 658 659​‌​
 660; 661 662 663 664 665 666; 667 668 669 670 671 672; 673 674 675 676 677 678; 679 680 681 682 683 684; 
685 686 687 688 689 690; 691 692 693 694 695 696; 697 698 699 700 701 702; 703 704 705 706 707 708; 709 71​‌​
0 711 712 713 714; 715 716 717 718 719 720; 721 722 723 724 725 726; 727 728 729 730 731 732; 733 734 735 
736 737 738; 739 740 741 742 743 744; 745 746 747 748 749 750; 751 752 753 754 755 756; 757 758 759 760 76​‌​
1 762; 763 764 765 766 767 768; 769 770 771 772 773 774; 775 776 777 778 779 780; 781 782 783 784 785 786;​‌​
 787 788 789 790 791 792; 793 794 795 796 797 798; 799 800 801 802 803 804; 805 806 807 808 809 810; 811 8​‌​
12 813 814 815 816; 817 818 819 820 821 822; 823 824 825 826 827 828; 829 830 831 832 833 834; 835 836 837​‌​
 838 839 840; 841 842 843 844 845 846; 847 848 849 850 851 852; 853 854 855 856 857 858; 859 860 861 862 8​‌​
63 864; 865 866 867 868 869 870; 871 872 873 874 875 876; 877 878 879 880 881 882; 883 884 885 886 887 888​‌​
; 889 890 891 892 893 894; 895 896 897 898 899 900; 901 902 903 904 905 906; 907 908 909 910 911 912; 913 
914 915 916 917 918; 919 920 921 922 923 924; 925 926 927 928 929 930; 931 932 933 934 935 936; 937 938 93​‌​
9 940 941 942; 943 944 945 946 947 948; 949 950 951 952 953 954; 955 956 957 958 959 960; 961 962 963 964 
965 966; 967 968 969 970 971 972; 973 974 975 976 977 978; 979 980 981 982 983 984; 985 986 987 988 989 99​‌​
0; 991 992 993 994 995 996; 997 998 999 1000 1001 1002; 1003 1004 1005 1006 1007 1008; 1009 1010 1011 1012​‌​
 1013 1014; 1015 1016 1017 1018 1019 1020; 1021 1022 1023 1024 1025 1026; 1027 1028 1029 1030 1031 1032; 1​‌​
033 1034 1035 1036 1037 1038; 1039 1040 1041 1042 1043 1044; 1045 1046 1047 1048 1049 1050; 1051 1052 1053​‌​
 1054 1055 1056; 1057 1058 1059 1060 1061 1062; 1063 1064 1065 1066 1067 1068; 1069 1070 1071 1072 1073 10​‌​
74; 1075 1076 1077 1078 1079 1080; 1081 1082 1083 1084 1085 1086; 1087 1088 1089 1090 1091 1092; 1093 1094​‌​
 1095 1096 1097 1098; 1099 1100 1101 1102 1103 1104; 1105 1106 1107 1108 1109 1110; 1111 1112 1113 1114 11​‌​
15 1116; 1117 1118 1119 1120 1121 1122; 1123 1124 1125 1126 1127 1128; 1129 1130 1131 1132 1133 1134; 1135​‌​
 1136 1137 1138 1139 1140; 1141 1142 1143 1144 1145 1146; 1147 1148 1149 1150 1151 1152; 1153 1154 1155 11​‌​
56 1157 1158; 1159 1160 1161 1162 1163 1164; 1165 1166 1167 1168 1169 1170; 1171 1172 1173 1174 1175 1176;​‌​
 1177 1178 1179 1180 1181 1182; 1183 1184 1185 1186 1187 1188; 1189 1190 1191 1192 1193 1194; 1195 1196 11​‌​
97 1198 1199 1200; 1201 1202 1203 1204 1205 1206; 1207 1208 1209 1210 1211 1212; 1213 1214 1215 1216 1217 
1218; 1219 1220 1221 1222 1223 1224; 1225 1226 1227 1228 1229 1230; 1231 1232 1233 1234 1235 1236; 1237 12​‌​
38 1239 1240 1241 1242; 1243 1244 1245 1246 1247 1248; 1249 1250 1251 1252 1253 1254; 1255 1256 1257 1258 
1259 1260; 1261 1262 1263 1264 1265 1266; 1267 1268 1269 1270 1271 1272; 1273 1274 1275 1276 1277 1278; 12​‌​
79 1280 1281 1282 1283 1284; 1285 1286 1287 1288 1289 1290; 1291 1292 1293 1294 1295 1296; 1297 1298 1299 
1300 1301 1302; 1303 1304 1305 1306 1307 1308; 1309 1310 1311 1312 1313 1314; 1315 1316 1317 1318 1319 132​‌​
0; 1321 1322 1323 1324 1325 1326; 1327 1328 1329 1330 1331 1332; 1333 1334 1335 1336 1337 1338; 1339 1340 
1341 1342 1343 1344; 1345 1346 1347 1348 1349 1350; 1351 1352 1353 1354 1355 1356; 1357 1358 1359 1360 136​‌​
1 1362; 1363 1364 1365 1366 1367 1368; 1369 1370 1371 1372 1373 1374; 1375 1376 1377 1378 1379 1380; 1381 
1382 1383 1384 1385 1386; 1387 1388 1389 1390 1391 1392; 1393 1394 1395 1396 1397 1398; 1399 1400 1401 140​‌​
2 1403 1404; 1405 1406 1407 1408 1409 1410; 1411 1412 1413 1414 1415 1416; 1417 1418 1419 1420 1421 1422; 
1423 1424 1425 1426 1427 1428; 1429 1430 1431 1432 1433 1434; 1435 1436 1437 1438 1439 1440; 1441 1442 144​‌​
3 1444 1445 1446; 1447 1448 1449 1450 1451 1452; 1453 1454 1455 1456 1457 1458; 1459 1460 1461 1462 1463 1​‌​
464; 1465 1466 1467 1468 1469 1470; 1471 1472 1473 1474 1475 1476; 1477 1478 1479 1480 1481 1482; 1483 148​‌​
4 1485 1486 1487 1488; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0​‌​
 0 0 0; 0 0 0 0 0 0]                                                                                      
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠘⢻⣿⣿⣴⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠐⢛⣿⣿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠘⢻⢿⣷⣔⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠐⢹⣿⣿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠘⢻⢿⣷⣖⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢹⣿⣿⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⢿⣷⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⣿⣇⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠽⢿⣷⣧⡄⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⣿⣇⠄⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠝⢿⣷⣧⡄⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⣿⣥⠄⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠟⣿⣿⣧⡄│                                                                  
   1488 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⣿│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1488⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀60805 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 264 nodes, 512 elements                                                                      
dchi.dofnums = [0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0;​‌​
 0 0 0 0 0 0; 1483 1484 1485 1486 1487 1488; 1471 1472 1473 1474 1475 1476; 1441 1442 1443 1444 1445 1446;​‌​
 1393 1394 1395 1396 1397 1398; 1375 1376 1377 1378 1379 1380; 1429 1430 1431 1432 1433 1434; 1465 1466 14​‌​
67 1468 1469 1470; 1477 1478 1479 1480 1481 1482; 1459 1460 1461 1462 1463 1464; 1435 1436 1437 1438 1439 
1440; 1387 1388 1389 1390 1391 1392; 1327 1328 1329 1330 1331 1332; 1369 1370 1371 1372 1373 1374; 1423 14​‌​
24 1425 1426 1427 1428; 1447 1448 1449 1450 1451 1452; 1453 1454 1455 1456 1457 1458; 1417 1418 1419 1420 
1421 1422; 1381 1382 1383 1384 1385 1386; 1321 1322 1323 1324 1325 1326; 1309 1310 1311 1312 1313 1314; 13​‌​
63 1364 1365 1366 1367 1368; 1399 1400 1401 1402 1403 1404; 1405 1406 1407 1408 1409 1410; 1411 1412 1413 
1414 1415 1416; 1357 1358 1359 1360 1361 1362; 1315 1316 1317 1318 1319 1320; 1261 1262 1263 1264 1265 126​‌​
6; 1303 1304 1305 1306 1307 1308; 1333 1334 1335 1336 1337 1338; 1339 1340 1341 1342 1343 1344; 1345 1346 
1347 1348 1349 1350; 1351 1352 1353 1354 1355 1356; 1297 1298 1299 1300 1301 1302; 1255 1256 1257 1258 125​‌​
9 1260; 1249 1250 1251 1252 1253 1254; 1267 1268 1269 1270 1271 1272; 1273 1274 1275 1276 1277 1278; 1279 
1280 1281 1282 1283 1284; 1285 1286 1287 1288 1289 1290; 1291 1292 1293 1294 1295 1296; 1243 1244 1245 124​‌​
6 1247 1248; 1201 1202 1203 1204 1205 1206; 1207 1208 1209 1210 1211 1212; 1213 1214 1215 1216 1217 1218; 
1219 1220 1221 1222 1223 1224; 1225 1226 1227 1228 1229 1230; 1231 1232 1233 1234 1235 1236; 1237 1238 123​‌​
9 1240 1241 1242; 1195 1196 1197 1198 1199 1200; 1153 1154 1155 1156 1157 1158; 1159 1160 1161 1162 1163 1​‌​
164; 1165 1166 1167 1168 1169 1170; 1171 1172 1173 1174 1175 1176; 1177 1178 1179 1180 1181 1182; 1183 118​‌​
4 1185 1186 1187 1188; 1189 1190 1191 1192 1193 1194; 1147 1148 1149 1150 1151 1152; 1105 1106 1107 1108 1​‌​
109 1110; 1111 1112 1113 1114 1115 1116; 1117 1118 1119 1120 1121 1122; 1123 1124 1125 1126 1127 1128; 112​‌​
9 1130 1131 1132 1133 1134; 1135 1136 1137 1138 1139 1140; 1141 1142 1143 1144 1145 1146; 1099 1100 1101 1​‌​
102 1103 1104; 1057 1058 1059 1060 1061 1062; 1063 1064 1065 1066 1067 1068; 1069 1070 1071 1072 1073 1074​‌​
; 1075 1076 1077 1078 1079 1080; 1081 1082 1083 1084 1085 1086; 1087 1088 1089 1090 1091 1092; 1093 1094 1​‌​
095 1096 1097 1098; 1051 1052 1053 1054 1055 1056; 1009 1010 1011 1012 1013 1014; 1015 1016 1017 1018 1019​‌​
 1020; 1021 1022 1023 1024 1025 1026; 1027 1028 1029 1030 1031 1032; 1033 1034 1035 1036 1037 1038; 1039 1​‌​
040 1041 1042 1043 1044; 1045 1046 1047 1048 1049 1050; 1003 1004 1005 1006 1007 1008; 961 962 963 964 965​‌​
 966; 967 968 969 970 971 972; 973 974 975 976 977 978; 979 980 981 982 983 984; 985 986 987 988 989 990; 
991 992 993 994 995 996; 997 998 999 1000 1001 1002; 955 956 957 958 959 960; 913 914 915 916 917 918; 919​‌​
 920 921 922 923 924; 925 926 927 928 929 930; 931 932 933 934 935 936; 937 938 939 940 941 942; 943 944 9​‌​
45 946 947 948; 949 950 951 952 953 954; 907 908 909 910 911 912; 865 866 867 868 869 870; 871 872 873 874​‌​
 875 876; 877 878 879 880 881 882; 883 884 885 886 887 888; 889 890 891 892 893 894; 895 896 897 898 899 9​‌​
00; 901 902 903 904 905 906; 859 860 861 862 863 864; 817 818 819 820 821 822; 823 824 825 826 827 828; 82​‌​
9 830 831 832 833 834; 835 836 837 838 839 840; 841 842 843 844 845 846; 847 848 849 850 851 852; 853 854 
855 856 857 858; 811 812 813 814 815 816; 769 770 771 772 773 774; 775 776 777 778 779 780; 781 782 783 78​‌​
4 785 786; 787 788 789 790 791 792; 793 794 795 796 797 798; 799 800 801 802 803 804; 805 806 807 808 809 
810; 763 764 765 766 767 768; 721 722 723 724 725 726; 727 728 729 730 731 732; 733 734 735 736 737 738; 7​‌​
39 740 741 742 743 744; 745 746 747 748 749 750; 751 752 753 754 755 756; 757 758 759 760 761 762; 715 716​‌​
 717 718 719 720; 673 674 675 676 677 678; 679 680 681 682 683 684; 685 686 687 688 689 690; 691 692 693 6​‌​
94 695 696; 697 698 699 700 701 702; 703 704 705 706 707 708; 709 710 711 712 713 714; 667 668 669 670 671​‌​
 672; 625 626 627 628 629 630; 631 632 633 634 635 636; 637 638 639 640 641 642; 643 644 645 646 647 648; 
649 650 651 652 653 654; 655 656 657 658 659 660; 661 662 663 664 665 666; 619 620 621 622 623 624; 577 57​‌​
8 579 580 581 582; 583 584 585 586 587 588; 589 590 591 592 593 594; 595 596 597 598 599 600; 601 602 603 
604 605 606; 607 608 609 610 611 612; 613 614 615 616 617 618; 571 572 573 574 575 576; 529 530 531 532 53​‌​
3 534; 535 536 537 538 539 540; 541 542 543 544 545 546; 547 548 549 550 551 552; 553 554 555 556 557 558;​‌​
 559 560 561 562 563 564; 565 566 567 568 569 570; 523 524 525 526 527 528; 481 482 483 484 485 486; 487 4​‌​
88 489 490 491 492; 493 494 495 496 497 498; 499 500 501 502 503 504; 505 506 507 508 509 510; 511 512 513​‌​
 514 515 516; 517 518 519 520 521 522; 475 476 477 478 479 480; 433 434 435 436 437 438; 439 440 441 442 4​‌​
43 444; 445 446 447 448 449 450; 451 452 453 454 455 456; 457 458 459 460 461 462; 463 464 465 466 467 468​‌​
; 469 470 471 472 473 474; 427 428 429 430 431 432; 385 386 387 388 389 390; 391 392 393 394 395 396; 397 
398 399 400 401 402; 403 404 405 406 407 408; 409 410 411 412 413 414; 415 416 417 418 419 420; 421 422 42​‌​
3 424 425 426; 379 380 381 382 383 384; 337 338 339 340 341 342; 343 344 345 346 347 348; 349 350 351 352 
353 354; 355 356 357 358 359 360; 361 362 363 364 365 366; 367 368 369 370 371 372; 373 374 375 376 377 37​‌​
8; 331 332 333 334 335 336; 289 290 291 292 293 294; 295 296 297 298 299 300; 301 302 303 304 305 306; 307​‌​
 308 309 310 311 312; 313 314 315 316 317 318; 319 320 321 322 323 324; 325 326 327 328 329 330; 283 284 2​‌​
85 286 287 288; 241 242 243 244 245 246; 247 248 249 250 251 252; 253 254 255 256 257 258; 259 260 261 262​‌​
 263 264; 265 266 267 268 269 270; 271 272 273 274 275 276; 277 278 279 280 281 282; 235 236 237 238 239 2​‌​
40; 193 194 195 196 197 198; 199 200 201 202 203 204; 205 206 207 208 209 210; 211 212 213 214 215 216; 21​‌​
7 218 219 220 221 222; 223 224 225 226 227 228; 229 230 231 232 233 234; 187 188 189 190 191 192; 145 146 
147 148 149 150; 151 152 153 154 155 156; 157 158 159 160 161 162; 163 164 165 166 167 168; 169 170 171 17​‌​
2 173 174; 175 176 177 178 179 180; 181 182 183 184 185 186; 139 140 141 142 143 144; 97 98 99 100 101 102​‌​
; 103 104 105 106 107 108; 109 110 111 112 113 114; 115 116 117 118 119 120; 121 122 123 124 125 126; 127 
128 129 130 131 132; 133 134 135 136 137 138; 91 92 93 94 95 96; 49 50 51 52 53 54; 55 56 57 58 59 60; 61 
62 63 64 65 66; 67 68 69 70 71 72; 73 74 75 76 77 78; 79 80 81 82 83 84; 85 86 87 88 89 90; 43 44 45 46 47​‌​
 48; 1 2 3 4 5 6; 7 8 9 10 11 12; 13 14 15 16 17 18; 19 20 21 22 23 24; 25 26 27 28 29 30; 31 32 33 34 35 
36; 37 38 39 40 41 42; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0 0 0 0; 0 0 0​‌​
 0 0 0; 0 0 0 0 0 0]                                                                                      
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀│                                                                  
   1488 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1488⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀60805 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 264 nodes, 512 elements                                                                      
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀│                                                                  
   1488 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1488⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀60805 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 264 nodes, 512 elements                                                                      
bw = maximum(I .- J) + 1 = 1488                                                                           
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀│                                                                  
   1488 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1488⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀60805 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 264 nodes, 512 elements                                                                      
bw = maximum(I .- J) + 1 = 1488                                                                           
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠘⢻⣿⣿⣴⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠐⢛⣿⣿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠘⢻⢿⣷⣔⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠐⢹⣿⣿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠘⢻⢿⣷⣖⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢹⣿⣿⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⢿⣷⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⣿⣇⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠽⢿⣷⣧⡄⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⣿⣇⠄⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠝⢿⣷⣧⡄⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⣿⣥⠄⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠟⣿⣿⣧⡄│                                                                  
   1488 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⣿│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1488⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀60805 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
bw = maximum(I .- J) + 1 = 1302                                                                           
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
bw = maximum(I .- J) + 1 = 1302                                                                           
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣄⠀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
maximum(bw) = 1302                                                                                        
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣄⠀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
mean(bw) = 1.00000e+00                                                                                    
minimum(bw) = -1300                                                                                       
maximum(bw) = 1302                                                                                        
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣄⠀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
mean(bw) = 3.41764e+01                                                                                    
minimum(bw) = 0                                                                                           
maximum(bw) = 1302                                                                                        
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣄⠀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
mean(bw) = 3.46635e+01                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 1302                                                                                        
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣄⠀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 297 nodes, 512 elements                                                                      
mean(bw) = 3.51505e+01                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 1302                                                                                        
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠀⠙⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠛⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣿⣿⣤⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣆⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣤⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣷⣄⠀│                                                                  
   1302 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1302⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀48874 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 264 nodes, 512 elements                                                                      
mean(bw) = 7.45191e+02                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 1488                                                                                        
        ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
        ┌──────────────────────────────┐                                                                  
      1 │⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                              
        │⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                              
        │⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀⠀⠀│                                                                  
        │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣦⡀│                                                                  
   1488 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣷│                                                                  
        └──────────────────────────────┘                                                                  
        ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀1488⠀                                                                  
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀60805 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
mean(bw) = 2.49387e+02                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 97920                                                                                       
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\clamp​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                         
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                                     
[ Info: All examples may be executed with                                                                        
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()                   
                                                                                                                 
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr()      ​‌​
)                                                                                                                
[ Info: Mesh 16448 nodes, 32768 elements                                                                         
ERROR: MethodError: no method matching scatter(::Vector{Int64})                                                  
Closest candidates are:                                                                                   se\xb3D
  scatter(; kwargs...) at C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\PlotlyBa       ​‌​
se\xb3Du\src\api.jl:39                                                                                    kages\P
  scatter(::AbstractDict; kwargs...) at C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\pac       ​‌​
kages\PlotlyBase\xb3Du\src\api.jl:40                                                                             
Stacktrace:                                                                                                      
 [1] _explore_csr(n::Int64, thickness::Float64, nthr::Int64)                                              ples\sh
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam       ​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1084                                                   
 [2] _explore_csr()                                                                                       ples\sh
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam       ​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1024                                                   
 [3] top-level scope                                                                                             
   @ REPL[41]:1                                                                                                  
                                                                                                          \\clamp
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics       ​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                         
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                                     
[ Info: All examples may be executed with                                                                        
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()                   
                                                                                                          )      
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(       ​‌​
)                                                                                                                
[ Info: Mesh 16448 nodes, 32768 elements                                                                         
mean(bw) = 2.49387e+02                                                                                           
minimum(bw) = 1                                                                                                  
maximum(bw) = 97920                                                                                              
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                        
         ┌──────────────────────────────┐                                                                        
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                                    
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                                    
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                        
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                        
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                        
         └──────────────────────────────┘                                                                        
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                        
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                        
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics       ​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
ERROR: MethodError: no method matching PlotlyBase.Plot(::Vector{Vector{Int64}})                           
Closest candidates are:                                                                                   
  PlotlyBase.Plot(::AbstractVector{T}, ::AbstractMatrix) where T<:(AbstractVector) at C:\Users\pkonl\Subli​‌​
meText4_portable\assets\.julia-1.7.1-depot\packages\PlotlyBase\xb3Du\src\convenience_api.jl:39            
  PlotlyBase.Plot(::AbstractVector{T}, ::AbstractMatrix, ::PlotlyBase.Layout; config, kwargs...) where T<:​‌​
(AbstractVector) at C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\PlotlyBase\xb3​‌​
Du\src\convenience_api.jl:39                                                                              
  PlotlyBase.Plot(; config) at C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Plo​‌​
tlyBase\xb3Du\src\PlotlyBase.jl:101                                                                       
  ...                                                                                                     
Stacktrace:                                                                                               
 [1] plot(args::Vector{Vector{Int64}}; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}​‌​
}})                                                                                                       
   @ PlotlyJS C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\PlotlyJS\4jzLr\src\d​‌​
isplay.jl:153                                                                                             
 [2] plot(args::Vector{Vector{Int64}})                                                                    
   @ PlotlyJS C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\PlotlyJS\4jzLr\src\d​‌​
isplay.jl:153                                                                                             
 [3] _explore_csr(n::Int64, thickness::Float64, nthr::Int64)                                              
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1086                                            
 [4] _explore_csr()                                                                                       
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1024                                            
 [5] top-level scope                                                                                      
   @ REPL[45]:1                                                                                           
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
ERROR: UndefVarError: bw not defined                                                                      
Stacktrace:                                                                                               
 [1] macro expansion                                                                                      
   @ .\show.jl:1047 [inlined]                                                                             
 [2] _explore_csr(n::Int64, thickness::Float64, nthr::Int64)                                              
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1087                                            
 [3] _explore_csr()                                                                                       
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1024                                            
 [4] top-level scope                                                                                      
   @ REPL[47]:1                                                                                           
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
mean(bw) = 1.00000e+00                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 1                                                                                           
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
mean(bw) = 1.00000e+00                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 1                                                                                           
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
ERROR: UndefVarError: bw not defined                                                                      
Stacktrace:                                                                                               
 [1] _explore_csr(n::Int64, thickness::Float64, nthr::Int64)                                              
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1086                                            
 [2] _explore_csr()                                                                                       
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1024                                            
 [3] top-level scope                                                                                      
   @ REPL[53]:1                                                                                           
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
ERROR: MethodError: no method matching +(::Vector{Int64}, ::Int64)                                        
For element-wise addition, use broadcasting with dot syntax: array .+ scalar                              
Closest candidates are:                                                                                   
  +(::Any, ::Any, ::Any, ::Any...) at C:\Users\pkonl\SublimeText4_portable\assets\julia-1.7.1\share\julia\​‌​
base\operators.jl:655                                                                                     
  +(::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8} at​‌​
 C:\Users\pkonl\SublimeText4_portable\assets\julia-1.7.1\share\julia\base\int.jl:87                       
  +(::Union{VectorizationBase.AbstractMask{W}, VectorizationBase.VecUnroll{<:Any, W, SIMDTypes.Bit, <:Vect​‌​
orizationBase.AbstractMask{W}}} where W, ::Union{Bool, Float16, Float32, Float64, Int16, Int32, Int64, Int​‌​
8, UInt16, UInt32, UInt64, UInt8, SIMDTypes.Bit}) at C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.​‌​
7.1-depot\packages\VectorizationBase\xtnDY\src\base_defs.jl:285                                           
  ...                                                                                                     
Stacktrace:                                                                                               
 [1] _explore_csr(n::Int64, thickness::Float64, nthr::Int64)                                              
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1086                                            
 [2] _explore_csr()                                                                                       
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\exam​‌​
ples\shells\dynamics\clamp_cyl_forc_damp_expl_examples.jl:1024                                            
 [3] top-level scope                                                                                      
   @ REPL[55]:1                                                                                           
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
mean(bw) = 1.00000e+00                                                                                    
minimum(bw) = 1                                                                                           
maximum(bw) = 1                                                                                           
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
mean(bw) = 4.93684e+04                                                                                    
minimum(bw) = 397                                                                                         
maximum(bw) = 97921                                                                                       
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
          ┌────────────────────────────────────────┐                                                      
   100000 │⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠂│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠋⠁⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⠁⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
        0 │⣧⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          └────────────────────────────────────────┘                                                      
          ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀100000⠀                                                      
mean(bw) = 4.93684e+04                                                                                    
minimum(bw) = 397                                                                                         
maximum(bw) = 97921                                                                                       
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
          ┌────────────────────────────────────────┐                                                      
   100000 │⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠂│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠋⠁⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⠁⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
        0 │⣧⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          └────────────────────────────────────────┘                                                      
          ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀100000⠀                                                      
mean(bw) = 4.93684e+04                                                                                    
minimum(bw) = 397                                                                                         
maximum(bw) = 97921                                                                                       
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
          ┌────────────────────────────────────────┐                                                      
   100000 │⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠂│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠋⠁⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⠁⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⠀⠀⠀⣠⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          │⡇⠀⢀⡴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
        0 │⣧⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                      
          └────────────────────────────────────────┘                                                      
          ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀100000⠀                                                      
median(bw) = 4.93570e+04                                                                                  
minimum(bw) = 397                                                                                         
maximum(bw) = 97921                                                                                       
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(​‌​
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
          ┌────────────────────────────────────────┐                                                      
   100000 │⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡆│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣾⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
        0 │⣇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣸⣿⣿⣿⡇│                                                      
          └────────────────────────────────────────┘                                                      
          ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀100000⠀                                                      
median(bw) = 7.86000e+02                                                                                  
minimum(bw) = 7.80000e+01                                                                                 
maximum(bw) = 9.79200e+04                                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
         ┌──────────────────────────────┐                                                                 
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ > 0                                                             
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ < 0                                                             
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                                                 
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                                                 
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                                                 
         └──────────────────────────────┘                                                                 
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                                                 
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                                                 
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics
\\clamp_cyl_forc_damp_expl_examples.jl")                                                                  
WARNING: replacing module clamp_cyl_forc_damp_expl_examples.                                              
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples._explore_csr(
)                                                                                                         
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
          ┌────────────────────────────────────────┐                                                      
   100000 │⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡆│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣾⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│                                                      
        0 │⣇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣸⣿⣿⣿⡇│                                                      
          └────────────────────────────────────────┘                                                      
          ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀100000⠀                                                      
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\                                                      ​‌​
FinEtoolsFlexStructures.jl\\examples\\shells\\dynami                                                      ​‌​
cs\\clamp_cyl_forc_damp_expl_examples.jl")                                                                
WARNING: replacing module clamp_cyl_forc_damp_expl_e                                                      ​‌​
xamples.                                                                                                  
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.                                                      ​‌​
clamp_cyl_forc_damp_expl_examples.allrun()                                                                
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\                                                      ​‌​
FinEtoolsFlexStructures.jl\\examples\\shells\\dynami                                                      ​‌​
cs\\clamp_cyl_forc_damp_expl_examples.jl")                                                                
WARNING: replacing module clamp_cyl_forc_damp_expl_e                                                      ​‌​
xamples.                                                                                                  
[ Info: All examples may be executed with                                                                 
using .Main.clamp_cyl_forc_damp_expl_examples; Main.                                                      ​‌​
clamp_cyl_forc_damp_expl_examples.allrun()                                                                
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples                                                      ​‌​
; Main.clamp_cyl_forc_damp_expl_examples._explore_cs                                                      ​‌​
r()                                                                                                       
[ Info: Mesh 16448 nodes, 32768 elements                                                                  
          ┌────────────────────────────────────────┐                                                      ​‌​
                                                                                                          
   100000 │⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡆│                                                      ​‌​
                                                                                                          
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣾⣿⣿⡇│                                                      ​‌​
                                                                                                          
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
          │⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇│​‌​
                                                    
        0 │⣇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣸⣿⣿⣿⡇│​‌​
                                                    
          └────────────────────────────────────────┘​‌​
                                                    
          ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀100000⠀​‌​
                                                    
median(bw) = 7.86000e+02                            
minimum(bw) = 7.80000e+01                           
maximum(bw) = 9.79200e+04                           
median(nzs) = 4.20000e+01                           
minimum(nzs) = 30                                   
maximum(nzs) = 780                                  
         ⠀⠀⠀⠀⠀⠀⠀⠀Sparsity Pattern⠀⠀⠀⠀⠀⠀⠀⠀           
                                                    
         ┌──────────────────────────────┐ > 0       
                                          < 0       
       1 │⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│           
 > 0                                                
         │⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│           
 < 0                                                
         │⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│           
                                                    
         │⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│           
                                                    
         │⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│           
                                                    
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│           
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀│                                              
         │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀│                                              
   97920 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦│                                              
         └──────────────────────────────┘                                              
         ⠀1⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀97920⠀                                              
         ⠀⠀⠀⠀⠀⠀⠀⠀4070555 nonzeros⠀⠀⠀⠀⠀⠀⠀⠀                                              
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_serial                                                                          
ERROR: UndefVarError: test_serial not defined                                          
Stacktrace:                                                                            
 [1] allrun(ns::Vector{Int64})                                                         
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:245                   
 [2] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:243                   
 [3] top-level scope                                                                   
   @ REPL[71]:1                                                                        
                                                                                       
julia>                                                                                 
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
ERROR: MethodError: no method matching _execute_parallel_csr(::Int64, ::Float64, ::Int6​‌​
4)                                                                                     
Closest candidates are:                                                                
  _execute_parallel_csr(::Any, ::Any) at C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexSt​‌​
ructures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:86                 
  _execute_parallel_csr(::Any) at C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructure​‌​
s.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:86                        
Stacktrace:                                                                            
 [1] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:237                   
 [2] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:235 [inlined]                                          
 [3] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:245 [inlined]                                          
 [4] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:243                   
 [5] top-level scope                                                                   
   @ REPL[73]:1                                                                        
                                                                                       
julia>                                                                                 
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
ERROR: UndefVarError: L not defined                                                    
Stacktrace:                                                                            
 [1] _execute_parallel_csr(n::Int64, nthr::Int64)                                      
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:88                    
 [2] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:237                   
 [3] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:235 [inlined]                                          
 [4] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:245 [inlined]                                          
 [5] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:243                   
 [6] top-level scope                                                                   
   @ REPL[75]:1                                                                        
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 49537 nodes, 49152 elements                                               
ERROR: UndefVarError: thickness not defined                                            
Stacktrace:                                                                            
 [1] _execute_parallel_csr(n::Int64, nthr::Int64)                                      
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:114                   
 [2] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:237                   
 [3] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:235 [inlined]                                          
 [4] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:245 [inlined]                                          
 [5] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:243                   
 [6] top-level scope                                                                   
   @ REPL[77]:1                                                                        
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 49537 nodes, 49152 elements                                               
ERROR: MethodError: no method matching FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMM​‌​
ShellT3FF(::FinEtools.IntegDomainModule.IntegDomain{FinEtools.FESetModule.FESetQ4, FinE​‌​
tools.IntegDomainModule.var"#otherdimensionfu#1"{Float64}}, ::FinEtoolsDeforLinear.MatD​‌​
eforElastIsoModule.MatDeforElastIso{FinEtoolsDeforLinear.DeforModelRedModule.DeforModel​‌​
Red3D, FinEtoolsDeforLinear.MatDeforElastIsoModule.var"#tangentmoduli3d!#1", FinEtoolsD​‌​
eforLinear.MatDeforElastIsoModule.var"#update3d!#2"{DataType}, FinEtoolsDeforLinear.Mat​‌​
DeforElastIsoModule.var"#thermalstrain3d!#3"})                                         
Closest candidates are:                                                                
  FinEtoolsFlexStructures.FEMMShellT3FFModule.FEMMShellT3FF(::FinEtools.IntegDomainModu​‌​
le.IntegDomain{S, F}, ::M) where {S<:FinEtools.FESetModule.FESetT3, F<:Function, M} at 
C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\src\FEMMShellT3FFModule.jl:19​‌​
0                                                                                      
Stacktrace:                                                                            
 [1] make(integdomain::FinEtools.IntegDomainModule.IntegDomain{FinEtools.FESetModule.FE​‌​
SetQ4, FinEtools.IntegDomainModule.var"#otherdimensionfu#1"{Float64}}, material::FinEto​‌​
olsDeforLinear.MatDeforElastIsoModule.MatDeforElastIso{FinEtoolsDeforLinear.DeforModelR​‌​
edModule.DeforModelRed3D, FinEtoolsDeforLinear.MatDeforElastIsoModule.var"#tangentmodul​‌​
i3d!#1", FinEtoolsDeforLinear.MatDeforElastIsoModule.var"#update3d!#2"{DataType}, FinEt​‌​
oolsDeforLinear.MatDeforElastIsoModule.var"#thermalstrain3d!#3"})                      
   @ FinEtoolsFlexStructures.FEMMShellT3FFModule C:\Users\pkonl\Documents\00WIP\FinEtoo​‌​
lsFlexStructures.jl\src\FEMMShellT3FFModule.jl:201                                     
 [2] _execute_parallel_csr(n::Int64, nthr::Int64)                                      
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:114                   
 [3] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:237                   
 [4] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:235 [inlined]                                          
 [5] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:245 [inlined]                                          
 [6] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:243                   
 [7] top-level scope                                                                   
   @ REPL[79]:1                                                                        
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 49537 nodes, 98304 elements                                               
  0.441047 seconds (66 allocations: 21.619 MiB)                                        
omega_max = 2.46308e+07                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 7.30792e-08  
[ Info: 3421 steps                                                                     
[ Info: 1 threads used                                                                 
ERROR: BoundsError: attempt to access 292614-element Vector{Float64} at index [0]      
Stacktrace:                                                                            
 [1] getindex                                                                          
   @ .\array.jl:861 [inlined]                                                          
 [2] (::Main.spherical_cap_expl_examples.var"#peek#4"{Int64, Vector{Any}, Vector{Float6​‌​
4}, Int64})(step::Int64, U::Vector{Float64}, t::Float64)                               
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:202                   
 [3] parloop_csr!(M::SparseArrays.SparseMatrixCSC{Float64, Int64}, K::SparseMatricesCSR​‌​
.SparseMatrixCSR{1, Float64, Int64}, ksi::Float64, U0::Vector{Float64}, V0::Vector{Floa​‌​
t64}, tend::Float64, dt::Float64, force!::Main.spherical_cap_expl_examples.var"#force!#​‌​
3"{Vector{Float64}}, peek::Main.spherical_cap_expl_examples.var"#peek#4"{Int64, Vector{​‌​
Any}, Vector{Float64}, Int64}, nthr::Int64)                                            
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:63                    
 [4] _execute_parallel_csr(n::Int64, nthr::Int64)                                      
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:210                   
 [5] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:238                   
 [6] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:236 [inlined]                                          
 [7] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:246 [inlined]                                          
 [8] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:244                   
 [9] top-level scope                                                                   
   @ REPL[81]:1                                                                        
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 49537 nodes, 98304 elements                                               
  0.448861 seconds (66 allocations: 21.619 MiB)                                        
omega_max = 2.43717e+07                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 7.38563e-08  
cpoint = (selectnode(fens; nearestto = [0 0 R]))[1] = 33154                            
[ Info: 3385 steps                                                                     
[ Info: 1 threads used                                                                 
ERROR: BoundsError: attempt to access 292614-element Vector{Float64} at index [0]      
Stacktrace:                                                                            
 [1] getindex                                                                          
   @ .\array.jl:861 [inlined]                                                          
 [2] (::Main.spherical_cap_expl_examples.var"#peek#4"{Int64, Vector{Any}, Vector{Float6​‌​
4}, Int64})(step::Int64, U::Vector{Float64}, t::Float64)                               
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:202                   
 [3] parloop_csr!(M::SparseArrays.SparseMatrixCSC{Float64, Int64}, K::SparseMatricesCSR​‌​
.SparseMatrixCSR{1, Float64, Int64}, ksi::Float64, U0::Vector{Float64}, V0::Vector{Floa​‌​
t64}, tend::Float64, dt::Float64, force!::Main.spherical_cap_expl_examples.var"#force!#​‌​
3"{Vector{Float64}}, peek::Main.spherical_cap_expl_examples.var"#peek#4"{Int64, Vector{​‌​
Any}, Vector{Float64}, Int64}, nthr::Int64)                                            
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:63                    
 [4] _execute_parallel_csr(n::Int64, nthr::Int64)                                      
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:210                   
 [5] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:238                   
 [6] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:236 [inlined]                                          
 [7] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:246 [inlined]                                          
 [8] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:244                   
 [9] top-level scope                                                                   
   @ REPL[83]:1                                                                        
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 49537 nodes, 98304 elements                                               
ERROR: UndefVarError: lo not defined                                                   
Stacktrace:                                                                            
 [1] _execute_parallel_csr(n::Int64, nthr::Int64)                                      
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:130                   
 [2] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                 
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:246                   
 [3] test_parallel_csr                                                                 
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:244 [inlined]                                          
 [4] allrun                                                                            
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics​‌​
\spherical_cap_expl_examples.jl:254 [inlined]                                          
 [5] allrun()                                                                          
   @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStruc​‌​
tures.jl\examples\shells\dynamics\spherical_cap_expl_examples.jl:252                   
 [6] top-level scope                                                                   
   @ REPL[85]:1                                                                        
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 49537 nodes, 98304 elements                                               
  0.445478 seconds (66 allocations: 21.677 MiB)                                        
omega_max = 2.44260e+07                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 7.36921e-08  
[ Info: 3392 steps                                                                     
[ Info: 1 threads used                                                                 
 47.647495 seconds (10.57 k allocations: 222.421 MiB)                                  
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.031949 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66264e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17873e-07  
[ Info: 1888 steps                                                                     
[ Info: 1 threads used                                                                 
  1.582829 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.031821 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66259e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17876e-07  
[ Info: 1888 steps                                                                     
[ Info: 1 threads used                                                                 
  1.575050 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.029123 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66211e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17903e-07  
[ Info: 1887 steps                                                                     
[ Info: 1 threads used                                                                 
  1.626375 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.028739 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66212e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17902e-07  
[ Info: 1887 steps                                                                     
[ Info: 1 threads used                                                                 
  1.610242 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.027434 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66263e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17874e-07  
[ Info: 1888 steps                                                                     
[ Info: 1 threads used                                                                 
  1.595157 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.031683 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66267e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17872e-07  
[ Info: 1888 steps                                                                     
[ Info: 1 threads used                                                                 
  1.627847 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.030126 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.60997e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.20857e-07  
[ Info: 1870 steps                                                                     
[ Info: 1 threads used                                                                 
  1.647928 seconds (6.00 k allocations: 13.796 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.030172 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.48521e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.28155e-07  
[ Info: 1828 steps                                                                     
[ Info: 1 threads used                                                                 
  1.586205 seconds (5.89 k allocations: 14.212 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 3169 nodes, 6144 elements                                                 
  0.029240 seconds (58 allocations: 1.335 MiB)                                         
omega_max = 5.66226e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.17894e-07  
[ Info: 1887 steps                                                                     
[ Info: 1 threads used                                                                 
  1.650802 seconds (6.06 k allocations: 13.936 MiB)                                    
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun​‌​
()                                                                                     
#####################################################                                  
# test_parallel_csr                                                                    
[ Info: Clamped cylinder: parallel CSR                                                 
[ Info: Mesh 217 nodes, 384 elements                                                   
  0.001447 seconds (47 allocations: 89.188 KiB)                                        
omega_max = 1.17754e+06                                                                
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.52861e-06  
[ Info: 393 steps                                                                      
[ Info: 1 threads used                                                                 
  0.018177 seconds (1.48 k allocations: 922.203 KiB)                                   
[ Info: Dumping visualization                                                          
true                                                                                   
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\example​‌​
s\\shells\\dynamics\\spherical_cap_expl_examples.jl")                                  
WARNING: replacing module spherical_cap_expl_examples.                                 
[ Info: All examples may be executed with                                              
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()     
                                                                                       
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000270 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79805e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10449e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001557 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 4921 nodes, 9600 elements                                                                    
  0.046235 seconds (60 allocations: 2.679 MiB)                                                            
omega_max = 7.22209e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 2.49235e-07                     
[ Info: 2407 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.153647 seconds (7.62 k allocations: 21.981 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 4921 nodes, 9600 elements                                                                    
  0.044790 seconds (60 allocations: 2.679 MiB)                                                            
omega_max = 7.20780e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 2.49729e-07                     
[ Info: 2403 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.262155 seconds (7.61 k allocations: 21.981 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
┌ Error: Failed to revise C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\src\FEMMShellT3FFCompM​‌​
odule.jl                                                                                                  
│   exception =                                                                                           
│    invalid redefinition of constant FEMMShellT3FFComp                                                   
│    Stacktrace:                                                                                          
│     [1] top-level scope                                                                                 
│       @ none:0                                                                                          
│    Revise evaluation error at C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\none:0 
│                                                                                                         
└ @ Revise C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Revise\jHTGK\src\packag​‌​
edef.jl:708                                                                                               
┌ Warning: The running code does not match the saved version for the following files:                     
│                                                                                                         
│   C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\src\FEMMShellT3FFCompModule.jl              
│                                                                                                         
│ If the error was due to evaluation order, it can sometimes be resolved by calling `Revise.retry()`.     
│ Use Revise.errors() to report errors again. Only the first error in each file is shown.                 
│ Your prompt color may be yellow until the errors are resolved.                                          
└ @ Revise C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Revise\jHTGK\src\packag​‌​
edef.jl:818                                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
julia>                                                                                                    
                                                                                                          
pkonl@Hedwig MINGW64 ~/Documents/00WIP/FinEtoolsFlexStructures.jl/examples (main)                         
$ julia -t 1                                                                                              
  Activating project at `C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples`              
┌ Warning: The active manifest file is an older format with no julia version entry. Dependencies may have 
been resolved with a different julia version.                                                             
└ @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\Manifest.toml:0                    
               _                                                                                          
   _       _ _(_)_     |  Documentation: https://docs.julialang.org                                       
  (_)     | (_) (_)    |                                                                                  
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.                                           
  | | | | | | |/ _` |  |                                                                                  
  | | |_| | | | (_| |  |  Version 1.7.1 (2021-12-22)                                                      
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release                                         
|__/                   |                                                                                  
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
[ Info: Precompiling FinEtoolsFlexStructures [723391e6-6814-4d1d-921c-018f691214d8]                       
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 4921 nodes, 9600 elements                                                                    
  0.041248 seconds (60 allocations: 2.679 MiB)                                                            
omega_max = 7.20409e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 2.49858e-07                     
[ Info: 2401 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.147131 seconds (7.61 k allocations: 21.981 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 4921 nodes, 9600 elements                                                                    
  0.046429 seconds (60 allocations: 2.679 MiB)                                                            
omega_max = 7.22091e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 2.49276e-07                     
[ Info: 2407 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.195033 seconds (7.62 k allocations: 21.981 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
#####################################################                                                            
# test_parallel_csr                                                                                              
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 4921 nodes, 9600 elements                                                                           
  0.043518 seconds (60 allocations: 2.679 MiB)                                                                   
omega_max = 7.21284e+06                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 2.49555e-07                            
[ Info: 2404 steps                                                                                               
[ Info: 1 threads used                                                                                           
  3.209151 seconds (7.62 k allocations: 21.981 MiB)                                                              
[ Info: Dumping visualization                                                                                    
true                                                                                                             
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
#####################################################                                                            
# test_parallel_csr                                                                                              
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 61 nodes, 96 elements                                                                               
  0.000266 seconds (45 allocations: 27.750 KiB)                                                                  
omega_max = 5.73088e+05                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.14088e-06                            
[ Info: 191 steps                                                                                                
[ Info: 1 threads used                                                                                           
  0.001587 seconds (864 allocations: 261.297 KiB)                                                                
[ Info: Dumping visualization                                                                                    
true                                                                                                             
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics       ​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000251 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.80532e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10060e-06                     
[ Info: 194 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002329 seconds (876 allocations: 264.062 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000269 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79599e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10559e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001992 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> @gp "clear"                                                                                        
ERROR: LoadError: UndefVarError: @gp not defined                                                          
in expression starting at REPL[12]:1                                                                      
                                                                                                          
julia> using Gnuplot; @gp "clear"                                                                         
                                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using Gnuplot; @gp "clear"                                                                         
                                                                                                          
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000253 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.80392e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10135e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001580 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000276 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.74630e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.13245e-06                     
[ Info: 192 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001689 seconds (867 allocations: 261.359 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000279 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79167e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10791e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001608 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000248 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.76810e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12061e-06                     
[ Info: 192 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001646 seconds (867 allocations: 261.359 KiB)                                                         
┌ Error:                                                                                                  
│                                                                                                         
│ gnuplot> set key top level box                                                                          
│                      ^                                                                                  
│          line 8840: unknown key option                                                                  
└ @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gnup​‌​
lot.jl:908                                                                                                
ERROR: Gnuplot error: ["unknown key option"]                                                              
Stacktrace:                                                                                               
  [1] error(s::String)                                                                                    
    @ Base .\error.jl:33                                                                                  
  [2] gpexec(gp::Gnuplot.GPSession, command::String)                                                      
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:911                                                                                              
  [3] add_cmd(gp::Gnuplot.GPSession, v::String)                                                           
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:844                                                                                              
  [4] driver(::String, ::Vararg{Any}; is3d::Bool)                                                         
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:1310                                                                                             
  [5] driver                                                                                              
    @ C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gnuplot.jl​‌​
:1262 [inlined]                                                                                           
  [6] _execute_parallel_csr(n::Int64, nthr::Int64)                                                        
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:303                                                        
  [7] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                                   
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:330                                                        
  [8] test_parallel_csr                                                                                   
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_exp​‌​
l_examples.jl:328 [inlined]                                                                               
  [9] allrun                                                                                              
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_exp​‌​
l_examples.jl:338 [inlined]                                                                               
 [10] allrun()                                                                                            
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:336                                                        
 [11] top-level scope                                                                                     
    @ REPL[22]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000258 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.78166e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.11329e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001579 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000265 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79202e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10772e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001511 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000324 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.78478e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.11162e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001534 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000249 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.80220e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10227e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001538 seconds (873 allocations: 264.000 KiB)                                                         
┌ Error:                                                                                                  
│          line 9644: internal error : STRING operator applied to undefined or non-STRING variable        
└ @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gnup​‌​
lot.jl:908                                                                                                
ERROR: Gnuplot error: ["internal error : STRING operator applied to undefined or non-STRING variable"]    
Stacktrace:                                                                                               
  [1] error(s::String)                                                                                    
    @ Base .\error.jl:33                                                                                  
  [2] gpexec(gp::Gnuplot.GPSession, command::String)                                                      
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:911                                                                                              
  [3] add_cmd(gp::Gnuplot.GPSession, v::String)                                                           
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:844                                                                                              
  [4] driver(::Symbol, ::Vararg{Any}; is3d::Bool)                                                         
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:1310                                                                                             
  [5] driver                                                                                              
    @ C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gnuplot.jl​‌​
:1262 [inlined]                                                                                           
  [6] _execute_parallel_csr(n::Int64, nthr::Int64)                                                        
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:302                                                        
  [7] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                                   
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:332                                                        
  [8] test_parallel_csr                                                                                   
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_exp​‌​
l_examples.jl:330 [inlined]                                                                               
  [9] allrun                                                                                              
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_exp​‌​
l_examples.jl:340 [inlined]                                                                               
 [10] allrun()                                                                                            
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:338                                                        
 [11] top-level scope                                                                                     
    @ REPL[30]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
ERROR: LoadError: syntax: cannot juxtapose string literal                                                 
Stacktrace:                                                                                               
 [1] top-level scope                                                                                      
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_expl​‌​
_examples.jl:303                                                                                          
 [2] include(fname::String)                                                                               
   @ Base.MainInclude .\client.jl:451                                                                     
 [3] top-level scope                                                                                      
   @ REPL[31]:1                                                                                           
in expression starting at C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynami​‌​
cs\spherical_cap_expl_examples.jl:303                                                                     
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000254 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.74807e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.13148e-06                     
[ Info: 192 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001571 seconds (867 allocations: 261.359 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000341 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79591e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10564e-06                     
[ Info: 193 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001533 seconds (873 allocations: 264.000 KiB)                                                         
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000250 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.76331e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12321e-06                     
[ Info: 192 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.001787 seconds (867 allocations: 261.359 KiB)                                                         
┌ Error:                                                                                                  
│                                                                                                         
│ gnuplot> plot    $data1 lw 2 lc rgb 'black' with points title 'Bathe',   $data2 lw 2 lc rgb 'black' with​‌​
 points title 'Belytschko',   $data3 lw 2 lc rgb 'black' with points title 'Tabiei',   $data4 lw 2 lc rgb 
'red' with lines title 'Deflection at the center'                                                         
│                                                                                                         
                                                                                                          
                                                 ^                                                        
│          line 10446:          cairolatex terminal cannot write to standard output                       
│ system error: No error                                                                                  
└ @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gnup​‌​
lot.jl:908                                                                                                
ERROR: Gnuplot error: ["No error"]                                                                        
Stacktrace:                                                                                               
  [1] error(s::String)                                                                                    
    @ Base .\error.jl:33                                                                                  
  [2] gpexec(gp::Gnuplot.GPSession, command::String)                                                      
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:911                                                                                              
  [3] execall(gp::Gnuplot.GPSession; term::String, output::String)                                        
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gn​‌​
uplot.jl:940                                                                                              
  [4] save(; kw::Base.Pairs{Symbol, String, Tuple{Symbol, Symbol}, NamedTuple{(:term, :output), Tuple{Stri​‌​
ng, String}}})                                                                                            
    @ Gnuplot C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\Gnuplot\jJ4hs\src\Gnuplot.j​‌​
uplot.jl:1532                                                                                                    
  [5] _execute_parallel_csr(n::Int64, nthr::Int64)                                                               
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:317                                                               
  [6] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                                          
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:335                                                               
  [7] test_parallel_csr                                                                                          
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_expl_examp​‌​
l_examples.jl:333 [inlined]                                                                                      
  [8] allrun                                                                                                     
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_expl_examp​‌​
l_examples.jl:343 [inlined]                                                                                      
  [9] allrun()                                                                                                   
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:341                                                               
 [10] top-level scope                                                                                            
    @ REPL[36]:1                                                                                                 
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
#####################################################                                                            
# test_parallel_csr                                                                                              
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 61 nodes, 96 elements                                                                               
  0.000251 seconds (45 allocations: 27.750 KiB)                                                                  
omega_max = 5.77455e+05                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.11713e-06                            
[ Info: 192 steps                                                                                                
[ Info: 1 threads used                                                                                           
  0.001932 seconds (867 allocations: 261.359 KiB)                                                                
[ Info: Dumping visualization                                                                                    
true                                                                                                             
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
#####################################################                                                            
# test_parallel_csr                                                                                              
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 61 nodes, 96 elements                                                                               
  0.000265 seconds (45 allocations: 27.750 KiB)                                                                  
omega_max = 5.79758e+05                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10475e-06                            
[ Info: 193 steps                                                                                                
[ Info: 1 threads used                                                                                           
  0.001544 seconds (873 allocations: 264.000 KiB)                                                                
[ Info: Dumping visualization                                                                                    
true                                                                                                             
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics       ​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000268 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.74510e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.13310e-06                     
[ Info: 319 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002531 seconds (1.28 k allocations: 295.078 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000293 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.80312e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10178e-06                     
[ Info: 322 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002617 seconds (1.29 k allocations: 297.844 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000392 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.75240e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12913e-06                     
[ Info: 320 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002552 seconds (1.28 k allocations: 297.719 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000373 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.73193e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.14030e-06                     
[ Info: 318 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002443 seconds (1.27 k allocations: 295.016 KiB)                                                      
reference_S4_impl = [[4.56388e-05, 9.53239e-05, 1.46007e-04, 1.95662e-04, 2.45313e-04, 2.95981e-04, 3.4564​‌​
6e-04, 3.95324e-04, 4.45008e-04, 4.95705e-04, 5.45384e-04, 5.95058e-04, 6.45741e-04, 6.95410e-04, 7.45080e​‌​
-04, 7.95764e-04, 8.45430e-04, 8.95092e-04, 9.45768e-04, 9.95298e-04]]                                    
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000349 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.80132e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10274e-06                     
[ Info: 322 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002492 seconds (1.29 k allocations: 297.844 KiB)                                                      
reference_S4_impl = [[4.56388e-05, 9.53239e-05, 1.46007e-04, 1.95662e-04, 2.45313e-04, 2.95981e-04, 3.4564​‌​
6e-04, 3.95324e-04, 4.45008e-04, 4.95705e-04, 5.45384e-04, 5.95058e-04, 6.45741e-04, 6.95410e-04, 7.45080e​‌​
-04, 7.95764e-04, 8.45430e-04, 8.95092e-04, 9.45768e-04, 9.95298e-04], [-5.94395e-03, -2.25395e-02, -3.818​‌​
66e-02, -4.71985e-02, -7.67390e-02, -1.05535e-01, -1.07423e-01, -7.77228e-02, -1.75384e-02, 1.88454e-02, 2​‌​
.93363e-02, 1.81323e-02, -2.32637e-02, -7.21026e-02, -1.25619e-01, -1.41957e-01, -1.03578e-01, -4.81662e-0​‌​
2, -2.34301e-03, 1.33323e-02]]                                                                            
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000336 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79148e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10801e-06                     
[ Info: 322 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002580 seconds (1.29 k allocations: 297.844 KiB)                                                      
reference_S4_impl = [[4.56388e-05, 9.53239e-05, 1.46007e-04, 1.95662e-04, 2.45313e-04, 2.95981e-04, 3.4564​‌​
6e-04, 3.95324e-04, 4.45008e-04, 4.95705e-04, 5.45384e-04, 5.95058e-04, 6.45741e-04, 6.95410e-04, 7.45080e​‌​
-04, 7.95764e-04, 8.45430e-04, 8.95092e-04, 9.45768e-04, 9.95298e-04], [-5.94395e-03, -2.25395e-02, -3.818​‌​
66e-02, -4.71985e-02, -7.67390e-02, -1.05535e-01, -1.07423e-01, -7.77228e-02, -1.75384e-02, 1.88454e-02, 2​‌​
.93363e-02, 1.81323e-02, -2.32637e-02, -7.21026e-02, -1.25619e-01, -1.41957e-01, -1.03578e-01, -4.81662e-0​‌​
2, -2.34301e-03, 1.33323e-02]]                                                                            
ERROR: BoundsError: attempt to access 2-element Vector{Vector{Float64}} at index [1:2, 2]                 
Stacktrace:                                                                                               
  [1] throw_boundserror(A::Vector{Vector{Float64}}, I::Tuple{Base.Slice{Base.OneTo{Int64}}, Int64})       
    @ Base .\abstractarray.jl:691                                                                         
  [2] checkbounds                                                                                         
    @ .\abstractarray.jl:656 [inlined]                                                                    
  [3] _getindex                                                                                           
    @ .\multidimensional.jl:838 [inlined]                                                                 
  [4] getindex                                                                                            
    @ .\abstractarray.jl:1218 [inlined]                                                                   
  [5] _execute_parallel_csr(n::Int64, nthr::Int64)                                                        
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:716                                                        
  [6] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                                   
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:742                                                        
  [7] test_parallel_csr                                                                                   
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_exp​‌​
l_examples.jl:740 [inlined]                                                                               
  [8] allrun                                                                                              
    @ C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\shells\dynamics\spherical_cap_exp​‌​
l_examples.jl:750 [inlined]                                                                               
  [9] allrun()                                                                                            
    @ Main.spherical_cap_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsFlexStructures.jl\examples\​‌​
shells\dynamics\spherical_cap_expl_examples.jl:748                                                        
 [10] top-level scope                                                                                     
    @ REPL[52]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000370 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.79506e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10610e-06                     
[ Info: 322 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002453 seconds (1.29 k allocations: 297.844 KiB)                                                      
reference_S4_impl = [[4.56388e-05, 9.53239e-05, 1.46007e-04, 1.95662e-04, 2.45313e-04, 2.95981e-04, 3.4564​‌​
6e-04, 3.95324e-04, 4.45008e-04, 4.95705e-04, 5.45384e-04, 5.95058e-04, 6.45741e-04, 6.95410e-04, 7.45080e​‌​
-04, 7.95764e-04, 8.45430e-04, 8.95092e-04, 9.45768e-04, 9.95298e-04], [-5.94395e-03, -2.25395e-02, -3.818​‌​
66e-02, -4.71985e-02, -7.67390e-02, -1.05535e-01, -1.07423e-01, -7.77228e-02, -1.75384e-02, 1.88454e-02, 2​‌​
.93363e-02, 1.81323e-02, -2.32637e-02, -7.21026e-02, -1.25619e-01, -1.41957e-01, -1.03578e-01, -4.81662e-0​‌​
2, -2.34301e-03, 1.33323e-02]]                                                                            
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000244 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.78990e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.10886e-06                     
[ Info: 322 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002461 seconds (1.29 k allocations: 297.844 KiB)                                                      
reference_S4_impl = [[4.56388e-05, 9.53239e-05, 1.46007e-04, 1.95662e-04, 2.45313e-04, 2.95981e-04, 3.4564​‌​
6e-04, 3.95324e-04, 4.45008e-04, 4.95705e-04, 5.45384e-04, 5.95058e-04, 6.45741e-04, 6.95410e-04, 7.45080e​‌​
-04, 7.95764e-04, 8.45430e-04, 8.95092e-04, 9.45768e-04, 9.95298e-04], [-5.94395e-03, -2.25395e-02, -3.818​‌​
66e-02, -4.71985e-02, -7.67390e-02, -1.05535e-01, -1.07423e-01, -7.77228e-02, -1.75384e-02, 1.88454e-02, 2​‌​
.93363e-02, 1.81323e-02, -2.32637e-02, -7.21026e-02, -1.25619e-01, -1.41957e-01, -1.03578e-01, -4.81662e-0​‌​
2, -2.34301e-03, 1.33323e-02]]                                                                            
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000323 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.78718e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.11032e-06                     
[ Info: 322 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002461 seconds (1.29 k allocations: 297.844 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> a =    0.000600000000000   0.039867549668874                                                       
ERROR: syntax: extra token "0.039867549668874" after end of expression                                    
Stacktrace:                                                                                               
 [1] top-level scope                                                                                      
   @ none:1                                                                                               
                                                                                                          
julia>    0.000620967741935   0.016909492273731                                                           
ERROR: syntax: extra token "0.016909492273731" after end of expression                                    
Stacktrace:                                                                                               
 [1] top-level scope                                                                                      
   @ none:1                                                                                               
                                                                                                          
julia>    0.000641935483871  -0.004635761589404                                                           
-3.99383e-03                                                                                              
                                                                                                          
julia>    0.000670967741935  -0.034304635761589                                                           
-3.36337e-02                                                                                              
                                                                                                          
julia>    0.000690322580645  -0.054437086092715                                                           
-5.37468e-02                                                                                              
                                                                                                          
julia>    0.000714516129032  -0.069271523178808                                                           
-6.85570e-02                                                                                              
                                                                                                          
julia>    0.000732258064516  -0.079867549668874                                                           
-7.91353e-02                                                                                              
                                                                                                          
julia>    0.000751612903226  -0.087637969094923                                                           
-8.68864e-02                                                                                              
                                                                                                          
julia>    0.000801612903226  -0.094701986754967                                                           
-9.39004e-02                                                                                              
                                                                                                          
julia>    0.000851612903226  -0.098233995584989                                                           
-9.73824e-02                                                                                              
                                                                                                          
julia>    0.000879032258065  -0.093642384105960                                                           
-9.27634e-02                                                                                              
                                                                                                          
julia>    0.000891935483871  -0.086225165562914                                                           
-8.53332e-02                                                                                              
                                                                                                          
julia>    0.000898387096774  -0.074922737306843                                                           
-7.40244e-02                                                                                              
                                                                                                          
julia>    0.000917741935484  -0.059381898454746                                                           
-5.84642e-02                                                                                              
                                                                                                          
julia>    0.000941935483871  -0.049492273730684                                                           
-4.85503e-02                                                                                              
                                                                                                          
julia>    0.000966129032258  -0.032538631346578                                                           
-3.15725e-02                                                                                              
                                                                                                          
julia>    0.000996774193548  -0.008520971302428                                                           
-7.52420e-03                                                                                              
                                                                                                          
julia> a = [   0.000600000000000   0.039867549668874                                                      
          0.000620967741935   0.016909492273731                                                           
          0.000641935483871  -0.004635761589404                                                           
          0.000670967741935  -0.034304635761589                                                           
          0.000690322580645  -0.054437086092715                                                           
          0.000714516129032  -0.069271523178808                                                           
          0.000732258064516  -0.079867549668874                                                           
          0.000751612903226  -0.087637969094923                                                           
          0.000801612903226  -0.094701986754967                                                           
          0.000851612903226  -0.098233995584989                                                           
          0.000879032258065  -0.093642384105960                                                           
          0.000891935483871  -0.086225165562914                                                           
          0.000898387096774  -0.074922737306843                                                           
          0.000917741935484  -0.059381898454746                                                           
          0.000941935483871  -0.049492273730684                                                           
          0.000966129032258  -0.032538631346578                                                           
          0.000996774193548  -0.008520971302428                                                           
       ]                                                                                                  
17×2 Matrix{Float64}:                                                                                     
 6.00000e-04   3.98675e-02                                                                                
 6.20968e-04   1.69095e-02                                                                                
 6.41935e-04  -4.63576e-03                                                                                
 6.70968e-04  -3.43046e-02                                                                                
 6.90323e-04  -5.44371e-02                                                                                
 7.14516e-04  -6.92715e-02                                                                                
 7.32258e-04  -7.98675e-02                                                                                
 7.51613e-04  -8.76380e-02                                                                                
 8.01613e-04  -9.47020e-02                                                                                
 8.51613e-04  -9.82340e-02                                                                                
 8.79032e-04  -9.36424e-02                                                                                
 8.91935e-04  -8.62252e-02                                                                                
 8.98387e-04  -7.49227e-02                                                                                
 9.17742e-04  -5.93819e-02                                                                                
 9.41935e-04  -4.94923e-02                                                                                
 9.66129e-04  -3.25386e-02                                                                                
 9.96774e-04  -8.52097e-03                                                                                
                                                                                                          
julia> b = a[:,1]                                                                                         
17-element Vector{Float64}:                                                                               
 6.00000e-04                                                                                              
 6.20968e-04                                                                                              
 6.41935e-04                                                                                              
 6.70968e-04                                                                                              
 6.90323e-04                                                                                              
 7.14516e-04                                                                                              
 7.32258e-04                                                                                              
 7.51613e-04                                                                                              
 8.01613e-04                                                                                              
 8.51613e-04                                                                                              
 8.79032e-04                                                                                              
 8.91935e-04                                                                                              
 8.98387e-04                                                                                              
 9.17742e-04                                                                                              
 9.41935e-04                                                                                              
 9.66129e-04                                                                                              
 9.96774e-04                                                                                              
                                                                                                          
julia> b ./ 6e-4 *120                                                                                     
17-element Vector{Float64}:                                                                               
 1.20000e+02                                                                                              
 1.24194e+02                                                                                              
 1.28387e+02                                                                                              
 1.34194e+02                                                                                              
 1.38065e+02                                                                                              
 1.42903e+02                                                                                              
 1.46452e+02                                                                                              
 1.50323e+02                                                                                              
 1.60323e+02                                                                                              
 1.70323e+02                                                                                              
 1.75806e+02                                                                                              
 1.78387e+02                                                                                              
 1.79677e+02                                                                                              
 1.83548e+02                                                                                              
 1.88387e+02                                                                                              
 1.93226e+02                                                                                              
 1.99355e+02                                                                                              
                                                                                                          
julia> a[:,1] .= b                                                                                        
17-element view(::Matrix{Float64}, :, 1) with eltype Float64:                                             
 6.00000e-04                                                                                              
 6.20968e-04                                                                                              
 6.41935e-04                                                                                              
 6.70968e-04                                                                                              
 6.90323e-04                                                                                              
 7.14516e-04                                                                                              
 7.32258e-04                                                                                              
 7.51613e-04                                                                                              
 8.01613e-04                                                                                              
 8.51613e-04                                                                                              
 8.79032e-04                                                                                              
 8.91935e-04                                                                                              
 8.98387e-04                                                                                              
 9.17742e-04                                                                                              
 9.41935e-04                                                                                              
 9.66129e-04                                                                                              
 9.96774e-04                                                                                              
                                                                                                          
julia> a                                                                                                  
17×2 Matrix{Float64}:                                                                                     
 6.00000e-04   3.98675e-02                                                                                
 6.20968e-04   1.69095e-02                                                                                
 6.41935e-04  -4.63576e-03                                                                                
 6.70968e-04  -3.43046e-02                                                                                
 6.90323e-04  -5.44371e-02                                                                                
 7.14516e-04  -6.92715e-02                                                                                
 7.32258e-04  -7.98675e-02                                                                                
 7.51613e-04  -8.76380e-02                                                                                
 8.01613e-04  -9.47020e-02                                                                                
 8.51613e-04  -9.82340e-02                                                                                
 8.79032e-04  -9.36424e-02                                                                                
 8.91935e-04  -8.62252e-02                                                                                
 8.98387e-04  -7.49227e-02                                                                                
 9.17742e-04  -5.93819e-02                                                                                
 9.41935e-04  -4.94923e-02                                                                                
 9.66129e-04  -3.25386e-02                                                                                
 9.96774e-04  -8.52097e-03                                                                                
                                                                                                          
julia> a[:,1] .= b ./ 6e-4 *120                                                                           
17-element view(::Matrix{Float64}, :, 1) with eltype Float64:                                             
 1.20000e+02                                                                                              
 1.24194e+02                                                                                              
 1.28387e+02                                                                                              
 1.34194e+02                                                                                              
 1.38065e+02                                                                                              
 1.42903e+02                                                                                              
 1.46452e+02                                                                                              
 1.50323e+02                                                                                              
 1.60323e+02                                                                                              
 1.70323e+02                                                                                              
 1.75806e+02                                                                                              
 1.78387e+02                                                                                              
 1.79677e+02                                                                                              
 1.83548e+02                                                                                              
 1.88387e+02                                                                                              
 1.93226e+02                                                                                              
 1.99355e+02                                                                                              
                                                                                                          
julia> a                                                                                                  
17×2 Matrix{Float64}:                                                                                     
 1.20000e+02   3.98675e-02                                                                                
 1.24194e+02   1.69095e-02                                                                                
 1.28387e+02  -4.63576e-03                                                                                
 1.34194e+02  -3.43046e-02                                                                                
 1.38065e+02  -5.44371e-02                                                                                
 1.42903e+02  -6.92715e-02                                                                                
 1.46452e+02  -7.98675e-02                                                                                
 1.50323e+02  -8.76380e-02                                                                                
 1.60323e+02  -9.47020e-02                                                                                
 1.70323e+02  -9.82340e-02                                                                                
 1.75806e+02  -9.36424e-02                                                                                
 1.78387e+02  -8.62252e-02                                                                                
 1.79677e+02  -7.49227e-02                                                                                
 1.83548e+02  -5.93819e-02                                                                                
 1.88387e+02  -4.94923e-02                                                                                
 1.93226e+02  -3.25386e-02                                                                                
 1.99355e+02  -8.52097e-03                                                                                
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000242 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.75524e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12758e-06                     
[ Info: 320 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002257 seconds (1.28 k allocations: 297.719 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> a                                                                                                  
17×2 Matrix{Float64}:                                                                                     
 1.20000e+02   3.98675e-02                                                                                
 1.24194e+02   1.69095e-02                                                                                
 1.28387e+02  -4.63576e-03                                                                                
 1.34194e+02  -3.43046e-02                                                                                
 1.38065e+02  -5.44371e-02                                                                                
 1.42903e+02  -6.92715e-02                                                                                
 1.46452e+02  -7.98675e-02                                                                                
 1.50323e+02  -8.76380e-02                                                                                
 1.60323e+02  -9.47020e-02                                                                                
 1.70323e+02  -9.82340e-02                                                                                
 1.75806e+02  -9.36424e-02                                                                                
 1.78387e+02  -8.62252e-02                                                                                
 1.79677e+02  -7.49227e-02                                                                                
 1.83548e+02  -5.93819e-02                                                                                
 1.88387e+02  -4.94923e-02                                                                                
 1.93226e+02  -3.25386e-02                                                                                
 1.99355e+02  -8.52097e-03                                                                                
                                                                                                          
julia> a[:,2] *= -1                                                                                       
17-element Vector{Float64}:                                                                               
 -3.98675e-02                                                                                             
 -1.69095e-02                                                                                             
  4.63576e-03                                                                                             
  3.43046e-02                                                                                             
  5.44371e-02                                                                                             
  6.92715e-02                                                                                             
  7.98675e-02                                                                                             
  8.76380e-02                                                                                             
  9.47020e-02                                                                                             
  9.82340e-02                                                                                             
  9.36424e-02                                                                                             
  8.62252e-02                                                                                             
  7.49227e-02                                                                                             
  5.93819e-02                                                                                             
  4.94923e-02                                                                                             
  3.25386e-02                                                                                             
  8.52097e-03                                                                                             
                                                                                                          
julia> a                                                                                                  
17×2 Matrix{Float64}:                                                                                     
 1.20000e+02  -3.98675e-02                                                                                
 1.24194e+02  -1.69095e-02                                                                                
 1.28387e+02   4.63576e-03                                                                                
 1.34194e+02   3.43046e-02                                                                                
 1.38065e+02   5.44371e-02                                                                                
 1.42903e+02   6.92715e-02                                                                                
 1.46452e+02   7.98675e-02                                                                                
 1.50323e+02   8.76380e-02                                                                                
 1.60323e+02   9.47020e-02                                                                                
 1.70323e+02   9.82340e-02                                                                                
 1.75806e+02   9.36424e-02                                                                                
 1.78387e+02   8.62252e-02                                                                                
 1.79677e+02   7.49227e-02                                                                                
 1.83548e+02   5.93819e-02                                                                                
 1.88387e+02   4.94923e-02                                                                                
 1.93226e+02   3.25386e-02                                                                                
 1.99355e+02   8.52097e-03                                                                                
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics​‌​
\\spherical_cap_expl_examples.jl")                                                                        
WARNING: replacing module spherical_cap_expl_examples.                                                    
[ Info: All examples may be executed with                                                                 
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
                                                                                                          
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                 
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
[ Info: Mesh 61 nodes, 96 elements                                                                        
  0.000356 seconds (45 allocations: 27.750 KiB)                                                           
omega_max = 5.76104e+05                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12443e-06                     
[ Info: 320 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002286 seconds (1.28 k allocations: 297.719 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher​‌​
\\FinEtoolsFlexStructures.jl\\examples\\shells\\dy                                                               ​‌​
namics\\spherical_cap_expl_examples.jl")          les.                                                           
WARNING: replacing module spherical_cap_expl_examp                                                               ​‌​
les.                                              rical_cap_expl_examples.allrun()                               
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.sphein.spherical_cap_expl_examples.allrun()                        ​‌​
rical_cap_expl_examples.allrun()                  ###                                                            
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Ma                                                               ​‌​
in.spherical_cap_expl_examples.allrun()                                                                          
##################################################                                                               ​‌​
###                                                                                                              
# test_parallel_csr                               t(1 + ksi ^ 2) - ksi) = 3.12470e-06                            
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 61 nodes, 96 elements                                                                               
  0.000244 seconds (45 allocations: 27.750 KiB)   B)                                                             
omega_max = 5.76055e+05                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqr                                                               ​‌​
t(1 + ksi ^ 2) - ksi) = 3.12470e-06                                                                              
[ Info: 320 steps                                 \\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics\\spher
[ Info: 1 threads used                                                                                           
  0.003196 seconds (1.28 k allocations: 297.719 KiB) .                                                           ​‌​
B)                                                                                                               
[ Info: Dumping visualization                        al_cap_expl_examples.allrun()                               
true                                                                                                             
                                                  \\Fspherical_cap_expl_examples.allrun()                        
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics       ​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
#####################################################                                                            
# test_parallel_csr                                                                                              
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 61 nodes, 96 elements                                                                               
  0.000328 seconds (45 allocations: 27.750 KiB)                                                                  
omega_max = 5.76123e+05                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12433e-06                     \\spher
[ Info: 320 steps                                                                                                
[ Info: 1 threads used                                                                                           
  0.002358 seconds (1.28 k allocations: 297.719 KiB)                                                             
[ Info: Dumping visualization                                                                                    
true                                                                                                             
                                                                                                                 
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples\\shells\\dynamics       ​‌​
\\spherical_cap_expl_examples.jl")                                                                               
WARNING: replacing module spherical_cap_expl_examples.                                                           
[ Info: All examples may be executed with                                                                        
using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                               
                                                                                                                 
julia> using .Main.spherical_cap_expl_examples; Main.spherical_cap_expl_examples.allrun()                        
#####################################################                                                            
# test_parallel_csr                                                                                              
[ Info: Clamped cylinder: parallel CSR                                                                           
[ Info: Mesh 61 nodes, 96 elements                                                                               
  0.000354 seconds (45 allocations: 27.750 KiB)                                                                  
omega_max = 5.76296e+05                                                                                          
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.12339e-06                            
[ Info: 320 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.002440 seconds (1.28 k allocations: 297.719 KiB)                                                      
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")[ Info​‌​
: All examples may be executed with                                                                       
using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()            
                                                                                                          
julia> using .Main.clamp_cyl_forc_damp_expl_examples; Main.clamp_cyl_forc_damp_expl_examples.allrun()     
                                                                                                          
#####################################################                                                     
# test_serial                                                                                             
[ Info: Clamped cylinder: serial                                                                          
ERROR: UndefVarError: R not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_serial(n::Int64, thickness::Float64)                                                        
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_b​‌​
ar_examples.jl:446                                                                                        
 [2] test_serial(ns::Vector{Int64})                                                                       
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_b​‌​
ar_examples.jl:792                                                                                        
 [3] allrun(ns::Vector{Int64})                                                                            
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_b​‌​
ar_examples.jl:903                                                                                        
 [4] allrun()                                                                                             
   @ Main.clamp_cyl_forc_damp_expl_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_b​‌​
ar_examples.jl:901                                                                                        
 [5] top-level scope                                                                                      
   @ REPL[97]:1                                                                                           
                                                                                                          
julia>                                                                                                    
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
                                                                                                          
#####################################################                                                     
# test_serial                                                                                             
[ Info: Clamped cylinder: serial                                                                          
ERROR: UndefVarError: R not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_serial(n::Int64, thickness::Float64)                                                        
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
446                                                                                                       
 [2] test_serial(ns::Vector{Int64})                                                                       
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
792                                                                                                       
 [3] allrun(ns::Vector{Int64})                                                                            
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
903                                                                                                       
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
901                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[99]:1                                                                                           
                                                                                                          
julia>                                                                                                    
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> include("")                                                                                        
ERROR: SystemError: opening file "C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples​‌​
\\": No such file or directory                                                                            
Stacktrace:                                                                                               
  [1] systemerror(p::String, errno::Int32; extrainfo::Nothing)                                            
    @ Base .\error.jl:174                                                                                 
  [2] #systemerror#68                                                                                     
    @ .\error.jl:173 [inlined]                                                                            
  [3] systemerror                                                                                         
    @ .\error.jl:173 [inlined]                                                                            
  [4] open(fname::String; lock::Bool, read::Nothing, write::Nothing, create::Nothing, truncate::Nothing, a​‌​
ppend::Nothing)                                                                                           
    @ Base .\iostream.jl:293                                                                              
  [5] open                                                                                                
    @ .\iostream.jl:282 [inlined]                                                                         
  [6] open(f::Base.var"#364#365"{String}, args::String; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, Named​‌​
Tuple{(), Tuple{}}})                                                                                      
    @ Base .\io.jl:328                                                                                    
  [7] open                                                                                                
    @ .\io.jl:328 [inlined]                                                                               
  [8] read                                                                                                
    @ .\io.jl:436 [inlined]                                                                               
  [9] _include(mapexpr::Function, mod::Module, _path::String)                                             
    @ Base .\loading.jl:1249                                                                              
 [10] include(fname::String)                                                                              
    @ Base.MainInclude .\client.jl:451                                                                    
 [11] top-level scope                                                                                     
    @ REPL[101]:1                                                                                         
                                                                                                          
julia> include("")                                                                                        
ERROR: SystemError: opening file "C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples​‌​
\\": No such file or directory                                                                            
Stacktrace:                                                                                               
  [1] systemerror(p::String, errno::Int32; extrainfo::Nothing)                                            
    @ Base .\error.jl:174                                                                                 
  [2] #systemerror#68                                                                                     
    @ .\error.jl:173 [inlined]                                                                            
  [3] systemerror                                                                                         
    @ .\error.jl:173 [inlined]                                                                            
  [4] open(fname::String; lock::Bool, read::Nothing, write::Nothing, create::Nothing, truncate::Nothing, a​‌​
ppend::Nothing)                                                                                           
    @ Base .\iostream.jl:293                                                                              
  [5] open                                                                                                
    @ .\iostream.jl:282 [inlined]                                                                         
  [6] open(f::Base.var"#364#365"{String}, args::String; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, Named​‌​
Tuple{(), Tuple{}}})                                                                                      
    @ Base .\io.jl:328                                                                                    
  [7] open                                                                                                
    @ .\io.jl:328 [inlined]                                                                               
  [8] read                                                                                                
    @ .\io.jl:436 [inlined]                                                                               
  [9] _include(mapexpr::Function, mod::Module, _path::String)                                             
    @ Base .\loading.jl:1249                                                                              
 [10] include(fname::String)                                                                              
    @ Base.MainInclude .\client.jl:451                                                                    
 [11] top-level scope                                                                                     
    @ REPL[101]:1                                                                                         
                                                                                                          
julia> include("")                                                                                        
ERROR: SystemError: opening file "C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsFlexStructures.jl\\examples​‌​
\\": No such file or directory                                                                            
Stacktrace:                                                                                               
  [1] systemerror(p::String, errno::Int32; extrainfo::Nothing)                                            
    @ Base .\error.jl:174                                                                                 
  [2] #systemerror#68                                                                                     
    @ .\error.jl:173 [inlined]                                                                            
  [3] systemerror                                                                                         
    @ .\error.jl:173 [inlined]                                                                            
  [4] open(fname::String; lock::Bool, read::Nothing, write::Nothing, create::Nothing, truncate::Nothing, a​‌​
ppend::Nothing)                                                                                           
    @ Base .\iostream.jl:293                                                                              
  [5] open                                                                                                
    @ .\iostream.jl:282 [inlined]                                                                         
  [6] open(f::Base.var"#364#365"{String}, args::String; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, Named​‌​
Tuple{(), Tuple{}}})                                                                                      
    @ Base .\io.jl:328                                                                                    
  [7] open                                                                                                
    @ .\io.jl:328 [inlined]                                                                               
  [8] read                                                                                                
    @ .\io.jl:436 [inlined]                                                                               
  [9] _include(mapexpr::Function, mod::Module, _path::String)                                             
    @ Base .\loading.jl:1249                                                                              
 [10] include(fname::String)                                                                              
    @ Base.MainInclude .\client.jl:451                                                                    
 [11] top-level scope                                                                                     
    @ REPL[101]:1                                                                                         
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> 1                                                                                                  
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
                                                                                                          
#####################################################                                                     
# test_serial                                                                                             
[ Info: Clamped cylinder: serial                                                                          
ERROR: UndefVarError: R not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_serial(n::Int64, thickness::Float64)                                                        
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
445                                                                                                       
 [2] test_serial(ns::Vector{Int64})                                                                       
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
791                                                                                                       
 [3] allrun(ns::Vector{Int64})                                                                            
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
902                                                                                                       
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
900                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[103]:1                                                                                          
                                                                                                          
julia>                                                                                                    
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
                                                                                                          
#####################################################                                                     
# test_serial                                                                                             
[ Info: Clamped cylinder: serial                                                                          
ERROR: UndefVarError: R not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_serial(n::Int64, thickness::Float64)                                                        
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
397                                                                                                       
 [2] test_serial(ns::Vector{Int64})                                                                       
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
743                                                                                                       
 [3] allrun(ns::Vector{Int64})                                                                            
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
854                                                                                                       
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
852                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[105]:1                                                                                          
                                                                                                          
julia>                                                                                                    
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
                                                                                                          
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
ERROR: MethodError: no method matching _execute_parallel_csr(::Int64, ::Float64, ::Int64)                 
Closest candidates are:                                                                                   
  _execute_parallel_csr(::Any, ::Any) at C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_​‌​
examples.jl:89                                                                                            
  _execute_parallel_csr(::Any) at C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_example​‌​
s.jl:89                                                                                                   
Stacktrace:                                                                                               
 [1] test_parallel_csr(ns::Vector{Int64}, nthr::Int64)                                                    
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [2] test_parallel_csr                                                                                    
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:229 [inlined]           
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[107]:1                                                                                          
                                                                                                          
julia>                                                                                                    
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
ERROR: UndefVarError: n not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
92                                                                                                        
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [3] test_parallel_csr                                                                                    
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:229 [inlined]           
 [4] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [5] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [6] top-level scope                                                                                      
   @ REPL[109]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
                                                                                                          
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
ERROR: UndefVarError: n not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
92                                                                                                        
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[111]:1                                                                                          
                                                                                                          
julia>                                                                                                    
                                                                                                          
julia> 92                                                                                                 
92                                                                                                        
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
ERROR: UndefVarError: n not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
92                                                                                                        
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[113]:1                                                                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
ERROR: UndefVarError: n not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
92                                                                                                        
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[113]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
ERROR: UndefVarError: L0 not defined                                                                      
Stacktrace:                                                                                               
 [1] (::Main.angle_bar_examples.var"#1#2"{Int64})(x::Vector{Float64}, k::Int64)                           
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
102                                                                                                       
 [2] doextrude(fens::FinEtools.FENodeSetModule.FENodeSet, fes::FinEtools.FESetModule.FESetL2, nLayers::Int​‌​
64, extrusionh::Main.angle_bar_examples.var"#1#2"{Int64})                                                 
   @ FinEtools.MeshQuadrilateralModule C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\pack​‌​
ages\FinEtools\Ahq3k\src\MeshQuadrilateralModule.jl:420                                                   
 [3] Q4extrudeL2(fens::FinEtools.FENodeSetModule.FENodeSet, fes::FinEtools.FESetModule.FESetL2, nLayers::I​‌​
nt64, extrusionh::Main.angle_bar_examples.var"#1#2"{Int64})                                               
   @ FinEtools.MeshQuadrilateralModule C:\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\pack​‌​
ages\FinEtools\Ahq3k\src\MeshQuadrilateralModule.jl:460                                                   
 [4] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
105                                                                                                       
 [5] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [6] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [7] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [8] top-level scope                                                                                      
   @ REPL[115]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
ERROR: UndefVarError: vtkwrite not defined                                                                
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
111                                                                                                       
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
231                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:239 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
237                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[117]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
ERROR: UndefVarError: thickness not defined                                                               
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
129                                                                                                       
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
232                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:240 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
238                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[119]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
ERROR: MethodError: no method matching bmul!(::Vector{Float64}, ::SparseArrays.SparseMatrixCSC{Float64, In​‌​
t64}, ::Vector{Float64})                                                                                  
Closest candidates are:                                                                                   
  bmul!(::AbstractVector, ::SparseMatricesCSR.SparseMatrixCSR, ::AbstractVector) at C:\Users\pkonl\Sublime​‌​
Text4_portable\assets\.julia-1.7.1-depot\packages\ThreadedSparseCSR\Rmijd\src\batch_matmul.jl:36          
  bmul!(::AbstractVector, ::SparseMatricesCSR.SparseMatrixCSR, ::AbstractVector, ::Number, ::Number) at C:​‌​
\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\ThreadedSparseCSR\Rmijd\src\batch_ma​‌​
tmul.jl:13                                                                                                
Stacktrace:                                                                                               
 [1] (::Main.angle_bar_examples.var"#pwr#3")(K::SparseArrays.SparseMatrixCSC{Float64, Int64}, M::SparseArr​‌​
ays.SparseMatrixCSC{Float64, Int64})                                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
158                                                                                                       
 [2] macro expansion                                                                                      
   @ .\timing.jl:220 [inlined]                                                                            
 [3] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
167                                                                                                       
 [4] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
232                                                                                                       
 [5] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:240 [inlined]           
 [6] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
238                                                                                                       
 [7] top-level scope                                                                                      
   @ REPL[121]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
ERROR: MethodError: no method matching bmul!(::Vector{Float64}, ::SparseArrays.SparseMatrixCSC{Float64, In​‌​
t64}, ::Vector{Float64})                                                                                  
Closest candidates are:                                                                                   
  bmul!(::AbstractVector, ::SparseMatricesCSR.SparseMatrixCSR, ::AbstractVector) at C:\Users\pkonl\Sublime​‌​
Text4_portable\assets\.julia-1.7.1-depot\packages\ThreadedSparseCSR\Rmijd\src\batch_matmul.jl:36          
  bmul!(::AbstractVector, ::SparseMatricesCSR.SparseMatrixCSR, ::AbstractVector, ::Number, ::Number) at C:​‌​
\Users\pkonl\SublimeText4_portable\assets\.julia-1.7.1-depot\packages\ThreadedSparseCSR\Rmijd\src\batch_ma​‌​
tmul.jl:13                                                                                                
Stacktrace:                                                                                               
 [1] (::Main.angle_bar_examples.var"#pwr#3")(K::SparseArrays.SparseMatrixCSC{Float64, Int64}, M::SparseArr​‌​
ays.SparseMatrixCSC{Float64, Int64})                                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
158                                                                                                       
 [2] macro expansion                                                                                      
   @ .\timing.jl:220 [inlined]                                                                            
 [3] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
167                                                                                                       
 [4] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
232                                                                                                       
 [5] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:240 [inlined]           
 [6] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
238                                                                                                       
 [7] top-level scope                                                                                      
   @ REPL[123]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.025426 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13679e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58340e-06                     
ERROR: UndefVarError: qpoint not defined                                                                  
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
179                                                                                                       
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
233                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:241 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
239                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[125]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.023134 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13680e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58340e-06                     
[ Info: 158 steps                                                                                         
ERROR: UndefVarError: parloop! not defined                                                                
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
205                                                                                                       
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
233                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:241 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
239                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[127]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.020801 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13646e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58387e-06                     
[ Info: 158 steps                                                                                         
ERROR: UndefVarError: omegad not defined                                                                  
Stacktrace:                                                                                               
 [1] parloop_csr!(M::SparseArrays.SparseMatrixCSC{Float64, Int64}, K::SparseMatricesCSR.SparseMatrixCSR{1,​‌​
 Float64, Int64}, ksi::Float64, U0::Vector{Float64}, V0::Vector{Float64}, tend::Float64, dt::Float64, forc​‌​
e!::Main.angle_bar_examples.var"#force!#4"{Vector{Float64}}, peek::Main.angle_bar_examples.var"#peek#5"{In​‌​
t64, Vector{Any}, Vector{Float64}, Int64}, nthr::Int64)                                                   
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
52                                                                                                        
 [2] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
205                                                                                                       
 [3] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
233                                                                                                       
 [4] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:241 [inlined]           
 [5] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
239                                                                                                       
 [6] top-level scope                                                                                      
   @ REPL[129]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.022179 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13681e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58338e-06                     
[ Info: 316 steps                                                                                         
ERROR: UndefVarError: omegad not defined                                                                  
Stacktrace:                                                                                               
 [1] parloop_csr!(M::SparseArrays.SparseMatrixCSC{Float64, Int64}, K::SparseMatricesCSR.SparseMatrixCSR{1,​‌​
 Float64, Int64}, ksi::Float64, U0::Vector{Float64}, V0::Vector{Float64}, tend::Float64, dt::Float64, forc​‌​
e!::Main.angle_bar_examples.var"#force!#4"{Vector{Float64}}, peek::Main.angle_bar_examples.var"#peek#5"{In​‌​
t64, Vector{Any}, Vector{Float64}, Int64}, nthr::Int64)                                                   
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
52                                                                                                        
 [2] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
205                                                                                                       
 [3] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
233                                                                                                       
 [4] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:241 [inlined]           
 [5] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
239                                                                                                       
 [6] top-level scope                                                                                      
   @ REPL[131]:1                                                                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.023255 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13680e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58339e-06                     
[ Info: 316 steps                                                                                         
ERROR: UndefVarError: omegad not defined                                                                  
Stacktrace:                                                                                               
 [1] parloop_csr!(M::SparseArrays.SparseMatrixCSC{Float64, Int64}, K::SparseMatricesCSR.SparseMatrixCSR{1,​‌​
 Float64, Int64}, ksi::Float64, U0::Vector{Float64}, V0::Vector{Float64}, tend::Float64, dt::Float64, forc​‌​
e!::Main.angle_bar_examples.var"#force!#4"{Vector{Float64}}, peek::Main.angle_bar_examples.var"#peek#5"{In​‌​
t64, Vector{Any}, Vector{Float64}, Int64}, nthr::Int64)                                                   
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
52                                                                                                        
 [2] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
205                                                                                                       
 [3] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
233                                                                                                       
 [4] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:241 [inlined]           
 [5] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
239                                                                                                       
 [6] top-level scope                                                                                      
   @ REPL[131]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.022469 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13680e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58339e-06                     
[ Info: 316 steps                                                                                         
ERROR: UndefVarError: omegad not defined                                                                  
Stacktrace:                                                                                               
 [1] parloop_csr!(M::SparseArrays.SparseMatrixCSC{Float64, Int64}, K::SparseMatricesCSR.SparseMatrixCSR{1,​‌​
 Float64, Int64}, ksi::Float64, U0::Vector{Float64}, V0::Vector{Float64}, tend::Float64, dt::Float64, forc​‌​
e!::Main.angle_bar_examples.var"#force!#4"{Vector{Float64}}, peek::Main.angle_bar_examples.var"#peek#5"{In​‌​
t64, Vector{Any}, Vector{Float64}, Int64}, nthr::Int64)                                                   
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
51                                                                                                        
 [2] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
204                                                                                                       
 [3] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
232                                                                                                       
 [4] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:240 [inlined]           
 [5] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
238                                                                                                       
 [6] top-level scope                                                                                      
   @ REPL[133]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Clamped cylinder: parallel CSR                                                                    
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.020508 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13666e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58358e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.330364 seconds (1.37 k allocations: 10.371 MiB)                                                       
[ Info: Dumping visualization                                                                             
ERROR: UndefVarError: n not defined                                                                       
Stacktrace:                                                                                               
 [1] _execute_parallel_csr(nref::Int64, nthr::Int64)                                                      
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
226                                                                                                       
 [2] test_parallel_csr(nrefs::Vector{Int64}, nthr::Int64)                                                 
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
233                                                                                                       
 [3] allrun                                                                                               
   @ C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:241 [inlined]           
 [4] allrun()                                                                                             
   @ Main.angle_bar_examples C:\Users\pkonl\Documents\00WIP\FinEtoolsDeforLinear.jl\angle_bar_examples.jl:​‌​
239                                                                                                       
 [5] top-level scope                                                                                      
   @ REPL[135]:1                                                                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.019287 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13673e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58348e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.262745 seconds (1.37 k allocations: 10.371 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.022758 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13681e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58338e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.249492 seconds (1.37 k allocations: 10.371 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.020677 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13679e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58341e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.248366 seconds (1.37 k allocations: 10.371 MiB, 6.46% gc time)                                        
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.021284 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13680e+06                                                                                   
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58340e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.261189 seconds (1.37 k allocations: 10.371 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.023906 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13680e+06                                                                                   
2 * pi * carrier_frequency = 4.71239e+05                                                                  
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58339e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.280216 seconds (1.37 k allocations: 10.371 MiB, 5.16% gc time)                                        
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.020807 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = 1.13679e+06                                                                                   
10 * 2 * pi * carrier_frequency = 4.71239e+06                                                             
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.58341e-06                     
[ Info: 316 steps                                                                                         
[ Info: 1 threads used                                                                                    
  0.228072 seconds (1.37 k allocations: 10.371 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.022159 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = max(omega_max, 10 * 2 * pi * carrier_frequency) = 4.71239e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.81972e-07                     
[ Info: 1309 steps                                                                                        
[ Info: 1 threads used                                                                                    
  0.810425 seconds (4.33 k allocations: 9.939 MiB)                                                        
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.022984 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = max(omega_max, 10 * 2 * pi * carrier_frequency) = 4.71239e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 3.81972e-07                     
[ Info: 1309 steps                                                                                        
[ Info: 1 threads used                                                                                    
  0.851311 seconds (4.33 k allocations: 9.939 MiB)                                                        
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.025330 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = max(omega_max, 20 * 2 * pi * carrier_frequency) = 9.42478e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.90986e-07                     
[ Info: 2618 steps                                                                                        
[ Info: 1 threads used                                                                                    
  1.612459 seconds (8.26 k allocations: 10.019 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [4]: parallel CSR                                                              
count(fens) = 2145                                                                                        
[ Info: Mesh 2145 nodes, 4096 elements                                                                    
  0.021619 seconds (58 allocations: 1.130 MiB)                                                            
omega_max = max(omega_max, 20 * 2 * pi * carrier_frequency) = 9.42478e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.90986e-07                     
[ Info: 1571 steps                                                                                        
[ Info: 1 threads used                                                                                    
  1.000384 seconds (5.11 k allocations: 9.758 MiB)                                                        
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [5]: parallel CSR                                                              
count(fens) = 8385                                                                                        
[ Info: Mesh 8385 nodes, 16384 elements                                                                   
  0.076885 seconds (60 allocations: 3.508 MiB)                                                            
omega_max = max(omega_max, 20 * 2 * pi * carrier_frequency) = 9.42478e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.90986e-07                     
[ Info: 1571 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.795986 seconds (5.11 k allocations: 37.751 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [5]: parallel CSR                                                              
count(fens) = 8385                                                                                        
[ Info: Mesh 8385 nodes, 16384 elements                                                                   
  0.077304 seconds (60 allocations: 3.508 MiB)                                                            
omega_max = max(omega_max, 20 * 2 * pi * carrier_frequency) = 9.42478e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.90986e-07                     
[ Info: 1571 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.694866 seconds (5.11 k allocations: 37.751 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [5]: parallel CSR                                                              
count(fens) = 8385                                                                                        
[ Info: Mesh 8385 nodes, 16384 elements                                                                   
  0.078875 seconds (60 allocations: 3.508 MiB)                                                            
omega_max = max(omega_max, 20 * 2 * pi * carrier_frequency) = 9.42478e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.90986e-07                     
[ Info: 1571 steps                                                                                        
[ Info: 1 threads used                                                                                    
  3.918836 seconds (5.11 k allocations: 37.751 MiB)                                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> include("C:\\Users\\pkonl\\Documents\\00WIP\\FinEtoolsDeforLinear.jl\\angle_bar_examples.jl")      
WARNING: replacing module angle_bar_examples.                                                             
[ Info: All examples may be executed with                                                                 
using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                          
                                                                                                          
julia> using .Main.angle_bar_examples; Main.angle_bar_examples.allrun()                                   
#####################################################                                                     
# test_parallel_csr                                                                                       
[ Info: Angle bar, nrefs = [7]: parallel CSR                                                              
count(fens) = 131841                                                                                      
[ Info: Mesh 131841 nodes, 262144 elements                                                                
  1.217704 seconds (68 allocations: 49.741 MiB, 1.64% gc time)                                            
omega_max = max(omega_max, 20 * 2 * pi * carrier_frequency) = 9.42478e+06                                 
dt = Float64((9.00000e-01 * 2) / omega_max) * (sqrt(1 + ksi ^ 2) - ksi) = 1.90986e-07                     
[ Info: 1571 steps                                                                                        
[ Info: 1 threads used                                                                                    
 61.626382 seconds (5.11 k allocations: 591.585 MiB, 0.03% gc time)                                       
[ Info: Dumping visualization                                                                             
true                                                                                                      
                                                                                                          
julia> 