"""
Spherical cap, transient vibration.

The structure is loaded with a suddenly applied pressure.
The downward deflection at the centre is monitored.
One quarter of the entire shell is modeled.
"""
module spherical_cap_expl_examples

using LinearAlgebra
using SparseArrays
using Arpack
using FinEtools
using FinEtoolsDeforLinear
using FinEtoolsFlexStructures
using FinEtoolsFlexStructures.FESetShellT3Module: FESetShellT3
using FinEtoolsFlexStructures.AssemblyModule
using FinEtoolsFlexStructures.FEMMShellT3FFModule
using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield, update_rotation_field!
using SymRCM
using VisualStructures: default_layout_3d, plot_nodes, plot_midline, render, plot_space_box, plot_midsurface, space_aspectratio, save_to_json
using PlotlyJS
using Gnuplot; @gp "clear"
using FinEtools.MeshExportModule.VTKWrite: vtkwritecollection
using ThreadedSparseCSR
using UnicodePlots
using InteractiveUtils
using BenchmarkTools

const E = 10.5e6*phun("psi")
const nu = 0.3;
const rho = 2.45e-4*phun("lbf*s^2/in^4")
const R = 22.27*phun("in")
const h = 0.41*phun("in")
const Rxy = (R)*sin(26.67/180*pi)
const q = 600*phun("psi")
const ksi = 0.0
const omegad = 2*pi*1000
const color = "red"
const tend = 0.001 #6e-4
const visualize = true

function parloop_csr!(M, K, ksi, U0, V0, tend, dt, force!, peek, nthr)
    U = deepcopy(U0)
    V = deepcopy(U0)
    A = deepcopy(U0)
    F = deepcopy(U0)
    E = deepcopy(U0)
    C = deepcopy(U0)
    C .= (ksi*2*omegad) .* vec(diag(M))
    invMC = deepcopy(U0)
    invMC .= 1.0 ./ (vec(diag(M)) .+ (dt/2) .* C)
    nsteps = Int64(round(tend/dt))
    if nsteps*dt < tend
        dt = tend / (nsteps+1)
    end

    nth = (nthr == 0 ? Base.Threads.nthreads() : nthr)
    @info "$nth threads used"
    
    t = 0.0
    # Initial Conditions
    @. U = U0; @. V = V0
    A .= invMC .* force!(F, t);
    peek(0, U, t)
    @time for step in 1:nsteps
        # Displacement update
        @. U += dt*V + ((dt^2)/2)*A; 
        # External loading
        force!(F, t);
        # Add elastic restoring forces
        F .-= ThreadedSparseCSR.bmul!(E, K, U)
        @inbounds @simd for i in eachindex(U)
            _Fi = F[i]; _Ai = A[i]; _Vi = V[i]
            # Add damping forces
            _Fi -= C[i] * (_Vi + (dt/2) * _Ai)
            # Compute the new acceleration.
            _A1i = invMC[i] * _Fi
            A[i] = _A1i
            # Update the velocity
            V[i] += (dt/2)* (_Ai + _A1i);
        end
        t = t + dt
        peek(step, U, t)
    end
end

function _execute_parallel_csr(n = 64, nthr = 0)
    color = "red"
    tolerance = min(R, h) / n  / 100
    
    tolerance = R/n/1000
    fens, fes = Q4circlen(Rxy, n)
    fens, fes = Q4toT3(fens, fes)
    
    fens.xyz = xyz3(fens)
    for i in 1:count(fens)
        x=fens.xyz[i, 1]; y=fens.xyz[i, 2];
        fens.xyz[i, :] .= (x, y, sqrt(R^2-x^2-y^2))
    end

    # bfes = meshboundary(fes)
    # candidates = connectednodes(bfes)
    # fens, fes = mergenodes(fens, fes, tolerance, candidates)
    bfes = meshboundary(fes)
    @info "Mesh $(count(fens)) nodes, $(count(fes)) elements"

    # Renumber the nodes
    femm = FEMMBase(IntegDomain(fes, TriRule(1)))
    C = connectionmatrix(femm, count(fens))
    perm = symrcm(C)
    
    mater = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)
    
    sfes = FESetShellT3()
    accepttodelegate(fes, sfes)
    femm = FEMMShellT3FFModule.make(IntegDomain(fes, TriRule(1), h), mater)
    # Set up
    femm.drilling_mass_scale = 1.0
    femm.drilling_stiffness_scale = 1.0

    # Construct the requisite fields, geometry and displacement
    # Initialize configuration variables
    geom0 = NodalField(fens.xyz)
    u0 = NodalField(zeros(size(fens.xyz,1), 3))
    Rfield0 = initial_Rfield(fens)
    dchi = NodalField(zeros(size(fens.xyz,1), 6))

    # Apply EBC's
    lx = selectnode(fens; box = Float64[0 0 -Inf Rxy-10*tolerance -Inf Inf], inflate = tolerance)
    ly = selectnode(fens; box = Float64[-Inf Rxy-10*tolerance 0 0 -Inf Inf], inflate = tolerance)
    lo = setdiff(connectednodes(meshboundary(fes)), vcat(lx, ly))
    for i in [2, 4, 6]
        setebc!(dchi, ly, true, i)
    end
    for i in [1, 5, 6]
        setebc!(dchi, lx, true, i)
    end
    for i in 1:6
        setebc!(dchi, lo, true, i)
    end
    applyebc!(dchi)
    numberdofs!(dchi, perm);
    # numberdofs!(dchi);

    # Assemble the system matrix
    FEMMShellT3FFModule.associategeometry!(femm, geom0)
    SM = FinEtoolsFlexStructures.AssemblyModule
    K = FEMMShellT3FFModule.stiffness(femm, SM.SysmatAssemblerSparseCSRSymm(0.0), geom0, u0, Rfield0, dchi);
    M = FEMMShellT3FFModule.mass(femm, SysmatAssemblerSparseDiag(), geom0, dchi);
    
    # Solve
    function pwr(K, M)
        invM = fill(0.0, size(M, 1))
        invM .= 1.0 ./ (vec(diag(M)))
        v = rand(size(M, 1))
        w = fill(0.0, size(M, 1))
        for i in 1:30
            ThreadedSparseCSR.bmul!(w, K, v)
            wn = norm(w)
            w .*= (1.0/wn)
            v .= invM .* w
            vn = norm(v)
            v .*= (1.0/vn)
        end
        sqrt((v' * (K * v)) / (v' * M * v))
    end
    @time omega_max = pwr(K, M)
    @show omega_max

    # @time evals, evecs, nconv = eigs(Symmetric(K), Symmetric(M); nev=1, which=:LM, explicittransform=:none)
    # @show sqrt(evals)
    # @show omega_max = sqrt(evals[1])

    @show dt = Float64(0.9* 2/omega_max) * (sqrt(1+ksi^2) - ksi)

    U0 = gathersysvec(dchi)
    V0 = deepcopy(U0)
    
    
    cpoint = selectnode(fens; nearestto=[0 0 R])[1]
    
    
    cpointdof = dchi.dofnums[cpoint, 3]
    
    
    function computetrac!(forceout::FFltVec, XYZ::FFltMat, tangents::FFltMat, fe_label::FInt)
        r = vec(XYZ); 
        r .= vec(r)/norm(vec(r))
        forceout[1:3] .= -r*q
        forceout[4:6] .= 0.0
        return forceout
    end

    # Distributed loading on the surface of the shell
    lfemm = FEMMBase(IntegDomain(fes, TriRule(3)))
    fi = ForceIntensity(FFlt, 6, computetrac!);
    Fmag = distribloads(lfemm, geom0, dchi, fi, 2);

    function force!(F, t)
        F .= Fmag
        return F
    end

    nsteps = Int(round(tend/dt))
    cdeflections = fill(0.0, nsteps+1)
    displacements = []
    nbtw = Int(round(nsteps/100))


    peek(step, U, t) = begin
        cdeflections[step+1] = U[cpointdof]
        if rem(step+1, nbtw) == 0
            push!(displacements, deepcopy(U))
        end
        nothing
    end

    @info "$nsteps steps"
    parloop_csr!(M, K, ksi, U0, V0, nsteps*dt, dt, force!, peek, nthr)
    
    if visualize
        reference_Bathe = [   0.5310   -0.0008
         10.6195    0.0069
         16.9912    0.0167
         23.8938    0.0302
         30.2655    0.0445
         32.3894    0.0503
         35.5752    0.0513
         41.9469    0.0471
         46.7257    0.0434
         51.5044    0.0471
         55.2212    0.0548
         60.0000    0.0667
         63.1858    0.0754
         67.4336    0.0855
         71.1504    0.0902
         78.5841    0.0855
         82.8319    0.0780
         85.4867    0.0630
         89.2035    0.0460
         94.5133    0.0241
        101.4159   -0.0066
        107.2566   -0.0293
        109.9115   -0.0439
        112.5664   -0.0497
        112.5664   -0.0500
        115.2212   -0.0515
        120.0000   -0.0470
        1.20000e+02  -3.98675e-02
        1.24194e+02  -1.69095e-02
        1.28387e+02   4.63576e-03
        1.34194e+02   3.43046e-02
        1.38065e+02   5.44371e-02
        1.42903e+02   6.92715e-02
        1.46452e+02   7.98675e-02
        1.50323e+02   8.76380e-02
        1.60323e+02   9.47020e-02
        1.70323e+02   9.82340e-02
        1.75806e+02   9.36424e-02
        1.78387e+02   8.62252e-02
        1.79677e+02   7.49227e-02
        1.83548e+02   5.93819e-02
        1.88387e+02   4.94923e-02
        1.93226e+02   3.25386e-02
        1.99355e+02   8.52097e-03  ]
        reference_Bathe[:, 1] .*= 6e-4/120/phun("Milli*s")
        reference_Bathe[:, 2] .*= -1
        reference_Belytschko = [
        0   0.001290322580645
        0.000036507936508  -0.003225806451613
        0.000065079365079  -0.010967741935484
        0.000095238095238  -0.022580645161290
        0.000123809523810  -0.038387096774194
        0.000155555555556  -0.045806451612903
        0.000193650793651  -0.039354838709677
        0.000217460317460  -0.034838709677419
        0.000255555555556  -0.041935483870968
        0.000287301587302  -0.054193548387097
        0.000315873015873  -0.070000000000000
        0.000355555555556  -0.089677419354839
        0.000401587301587  -0.092903225806452
        0.000439682539683  -0.082258064516129
        0.000466666666667  -0.058064516129032
        0.000482539682540  -0.037096774193548
        0.000498412698413  -0.012903225806452
        0.000526984126984   0.017096774193548
        0.000549206349206   0.034193548387097
        0.000582539682540   0.041612903225806
        0.000598412698413   0.038387096774194]  
        reference_Belytschko[:, 1] .*= 1/phun("Milli*s") 
        reference_Tabiei = [
        0.000003183023873   0.000649350649351
        0.000049336870027  -0.005844155844156
        0.000084350132626  -0.017207792207792
        0.000084350132626  -0.017532467532468
        0.000114588859416  -0.033766233766234
        0.000144827586207  -0.046103896103896
        0.000186206896552  -0.043181818181818
        0.000206896551724  -0.041883116883117
        0.000233952254642  -0.047077922077922
        0.000267374005305  -0.062987012987013
        0.000297612732095  -0.079220779220779
        0.000332625994695  -0.089610389610390
        0.000367639257294  -0.078246753246753
        0.000401061007958  -0.055844155844156
        0.000434482758621  -0.028896103896104
        0.000458355437666  -0.005194805194805
        0.000479045092838   0.017207792207792
        0.000507692307692   0.037012987012987
        0.000539522546419   0.047402597402597
        0.000572944297082   0.035389610389610
        0.000585676392573   0.025649350649351
        0.000600000000000   0.015909090909091
        ]
        reference_Tabiei[:, 1] .*= 1/phun("Milli*s") 
        reference_S4_impl = [
        [v for (i, v) in enumerate([0
5.07115E-06
1.01423E-05
1.52134E-05
2.02845E-05
2.53555E-05
3.04264E-05
3.54973E-05
4.05681E-05
4.56388E-05
5.07093E-05
5.57797E-05
6.085E-05
6.59202E-05
7.09902E-05
7.50461E-05
8.01158E-05
8.51853E-05
9.02547E-05
9.53239E-05
0.000100393
0.000105462
0.000110531
0.000115599
0.000120667
0.000125736
0.000130804
0.000135871
0.000140939
0.000146007
0.000150061
0.000155128
0.000160195
0.000165262
0.000170329
0.000175396
0.000180463
0.000185529
0.000190596
0.000195662
0.000200729
0.000205795
0.000210861
0.000215928
0.000220994
0.000225047
0.000230113
0.00023518
0.000240246
0.000245313
0.000250379
0.000255446
0.000260512
0.000265579
0.000270646
0.000275712
0.000280779
0.000285846
0.000290913
0.000295981
0.000300035
0.000305102
0.00031017
0.000315237
0.000320305
0.000325373
0.000330441
0.000335509
0.000340578
0.000345646
0.000350715
0.000355784
0.000360853
0.000365922
0.000370991
0.000375046
0.000380116
0.000385185
0.000390254
0.000395324
0.000400394
0.000405463
0.000410533
0.000415603
0.000420672
0.000425742
0.000430812
0.000435882
0.000440952
0.000445008
0.000450078
0.000455148
0.000460218
0.000465287
0.000470357
0.000475427
0.000480497
0.000485566
0.000490636
0.000495705
0.000500775
0.000505845
0.000510914
0.000515983
0.000520039
0.000525108
0.000530177
0.000535246
0.000540315
0.000545384
0.000550453
0.000555522
0.000560591
0.00056566
0.000570729
0.000575797
0.000580866
0.000585934
0.000591003
0.000595058
0.000600126
0.000605194
0.000610263
0.000615331
0.0006204
0.000625468
0.000630537
0.000635605
0.000640673
0.000645741
0.000650809
0.000655877
0.000660945
0.000666014
0.000670068
0.000675136
0.000680204
0.000685273
0.000690341
0.00069541
0.000700478
0.000705547
0.000710615
0.000715683
0.000720752
0.00072582
0.000730889
0.000735957
0.000740012
0.00074508
0.000750149
0.000755217
0.000760286
0.000765354
0.000770422
0.000775491
0.000780559
0.000785628
0.000790696
0.000795764
0.000800832
0.0008059
0.000810968
0.000815023
0.000820091
0.000825158
0.000830226
0.000835294
0.000840362
0.00084543
0.000850497
0.000855565
0.000860632
0.0008657
0.000870767
0.000875835
0.000880903
0.00088597
0.000890024
0.000895092
0.000900159
0.000905227
0.000910294
0.000915362
0.000920429
0.000925497
0.000930565
0.000935632
0.0009407
0.000945768
0.000950835
0.000955903
0.000960971
0.000965026
0.000970094
0.000975162
0.00098023
0.000985298
0.000990367
0.000995298
0.001]) if i % 5 == 0], 
        [v for (i, v) in enumerate([0
-7.67498E-05
-0.000306469
-0.000687599
-0.00121756
-0.00189281
-0.00270884
-0.00366025
-0.00474081
-0.00594395
-0.0072632
-0.00869194
-0.0102231
-0.0118492
-0.0135625
-0.0149876
-0.0168119
-0.0186442
-0.0205007
-0.0225395
-0.0249347
-0.0276195
-0.0303146
-0.0327461
-0.0347006
-0.0360918
-0.0370143
-0.0376026
-0.0379613
-0.0381866
-0.0383236
-0.0385079
-0.038787
-0.0392323
-0.0398955
-0.0408076
-0.0419817
-0.0434302
-0.0451718
-0.0471985
-0.0494824
-0.0520001
-0.0547292
-0.0576514
-0.0607323
-0.0632837
-0.0665619
-0.069916
-0.0733165
-0.076739
-0.0801471
-0.083511
-0.0868188
-0.0900418
-0.0931222
-0.0959787
-0.0985792
-0.100997
-0.103319
-0.105535
-0.10715
-0.108846
-0.110113
-0.110921
-0.111261
-0.111139
-0.110598
-0.109739
-0.108662
-0.107423
-0.106033
-0.104453
-0.102614
-0.100428
-0.0977973
-0.0953198
-0.0917303
-0.0875911
-0.0829141
-0.0777228
-0.0720751
-0.0660658
-0.05979
-0.0533422
-0.0468294
-0.0403529
-0.0340041
-0.0278628
-0.0219946
-0.0175384
-0.012306
-0.00747099
-0.00302579
0.0010714
0.00487438
0.00839553
0.0115786
0.0143632
0.0167548
0.0188454
0.02076
0.0225767
0.0242986
0.0258689
0.0269605
0.0280611
0.0288348
0.0292811
0.0294355
0.0293363
0.0290064
0.0284676
0.0277568
0.0269208
0.0259726
0.0248676
0.0235379
0.0219244
0.0199723
0.0181323
0.0154494
0.0123236
0.00877044
0.00483649
0.000581272
-0.00393241
-0.00863236
-0.0134494
-0.0183353
-0.0232637
-0.0282119
-0.0331389
-0.0379985
-0.0427862
-0.0465988
-0.0514131
-0.056355
-0.061462
-0.0667246
-0.0721026
-0.0775485
-0.0830356
-0.0885616
-0.0941352
-0.0997642
-0.105434
-0.111078
-0.116576
-0.120766
-0.125619
-0.129935
-0.133645
-0.136734
-0.139217
-0.141104
-0.142403
-0.143131
-0.143297
-0.142906
-0.141957
-0.140436
-0.138327
-0.135616
-0.133016
-0.129242
-0.124915
-0.120093
-0.114861
-0.109323
-0.103578
-0.0976962
-0.0917255
-0.0857247
-0.0797768
-0.0739598
-0.0683185
-0.0628544
-0.0575344
-0.0533492
-0.0481662
-0.043011
-0.0378901
-0.032842
-0.0279105
-0.0231308
-0.0185327
-0.0141437
-0.00998045
-0.00604611
-0.00234301
0.00110603
0.00424642
0.00699893
0.00886813
0.0107437
0.0120919
0.0129392
0.0133599
0.0134558
0.0133323
0.0130915])
        if i % 5 == 0], 
            ]

            reference_S4_expl = [
            [v for (i, v) in enumerate([0
1.01423E-06
2.02846E-06
3.04269E-06
4.05692E-06
5.07116E-06
6.08539E-06
7.09962E-06
8.11385E-06
9.12808E-06
1.01423E-05
1.11565E-05
1.21708E-05
1.3185E-05
1.41992E-05
1.52135E-05
1.62277E-05
1.72419E-05
1.82562E-05
1.92704E-05
2.02846E-05
2.12988E-05
2.23131E-05
2.33273E-05
2.43415E-05
2.53558E-05
2.637E-05
2.73842E-05
2.83985E-05
2.94127E-05
3.04269E-05
3.14412E-05
3.24554E-05
3.34696E-05
3.44838E-05
3.54981E-05
3.65123E-05
3.75265E-05
3.85408E-05
3.9555E-05
4.05692E-05
4.15835E-05
4.25977E-05
4.36119E-05
4.46262E-05
4.56404E-05
4.66546E-05
4.76689E-05
4.86831E-05
4.96973E-05
5.07116E-05
5.17258E-05
5.274E-05
5.37543E-05
5.47685E-05
5.57827E-05
5.6797E-05
5.78112E-05
5.88254E-05
5.98397E-05
6.08539E-05
6.18681E-05
6.28823E-05
6.38966E-05
6.49108E-05
6.5925E-05
6.69393E-05
6.79535E-05
6.89677E-05
6.9982E-05
7.09962E-05
7.20104E-05
7.30247E-05
7.40389E-05
7.50531E-05
7.60674E-05
7.70816E-05
7.80958E-05
7.91101E-05
8.01243E-05
8.11385E-05
8.21528E-05
8.3167E-05
8.41812E-05
8.51955E-05
8.62097E-05
8.72239E-05
8.82382E-05
8.92524E-05
9.02666E-05
9.12808E-05
9.22951E-05
9.33093E-05
9.43235E-05
9.53378E-05
9.6352E-05
9.73662E-05
9.83805E-05
9.93947E-05
0.000100409
0.000101423
0.000102437
0.000103452
0.000104466
0.00010548
0.000106494
0.000107509
0.000108523
0.000109537
0.000110551
0.000111565
0.00011258
0.000113594
0.000114608
0.000115622
0.000116637
0.000117651
0.000118665
0.000119679
0.000120694
0.000121708
0.000122722
0.000123736
0.00012475
0.000125765
0.000126779
0.000127793
0.000128807
0.000129822
0.000130836
0.00013185
0.000132864
0.000133879
0.000134893
0.000135907
0.000136921
0.000137935
0.00013895
0.000139964
0.000140978
0.000141992
0.000143007
0.000144021
0.000145035
0.000146049
0.000147063
0.000148078
0.000149092
0.000150106
0.00015112
0.000152135
0.000153149
0.000154163
0.000155177
0.000156191
0.000157206
0.00015822
0.000159234
0.000160248
0.000161263
0.000162277
0.000163291
0.000164305
0.000165319
0.000166334
0.000167348
0.000168362
0.000169376
0.000170391
0.000171405
0.000172419
0.000173433
0.000174448
0.000175462
0.000176476
0.00017749
0.000178504
0.000179519
0.000180533
0.000181547
0.000182561
0.000183576
0.00018459
0.000185604
0.000186618
0.000187632
0.000188647
0.000189661
0.000190675
0.000191689
0.000192704
0.000193718
0.000194732
0.000195746
0.00019676
0.000197775
0.000198789
0.000199803
0.000200817
0.000201832
0.000202846
0.00020386
0.000204874
0.000205888
0.000206903
0.000207917
0.000208931
0.000209945
0.00021096
0.000211974
0.000212988
0.000214002
0.000215016
0.000216031
0.000217045
0.000218059
0.000219073
0.000220088
0.000221102
0.000222116
0.00022313
0.000224145
0.000225159
0.000226173
0.000227187
0.000228201
0.000229216
0.00023023
0.000231244
0.000232258
0.000233273
0.000234287
0.000235301
0.000236315
0.000237329
0.000238344
0.000239358
0.000240372
0.000241386
0.000242401
0.000243415
0.000244429
0.000245443
0.000246457
0.000247472
0.000248486
0.0002495
0.000250514
0.000251529
0.000252543
0.000253557
0.000254571
0.000255586
0.0002566
0.000257614
0.000258628
0.000259643
0.000260657
0.000261671
0.000262685
0.0002637
0.000264714
0.000265728
0.000266742
0.000267757
0.000268771
0.000269785
0.000270799
0.000271813
0.000272828
0.000273842
0.000274856
0.00027587
0.000276885
0.000277899
0.000278913
0.000279927
0.000280942
0.000281956
0.00028297
0.000283984
0.000284999
0.000286013
0.000287027
0.000288041
0.000289056
0.00029007
0.000291084
0.000292098
0.000293113
0.000294127
0.000295141
0.000296155
0.000297169
0.000298184
0.000299198
0.000300212
0.000301226
0.000302241
0.000303255
0.000304269
0.000305283
0.000306298
0.000307312
0.000308326
0.00030934
0.000310355
0.000311369
0.000312383
0.000313397
0.000314412
0.000315426
0.00031644
0.000317454
0.000318468
0.000319483
0.000320497
0.000321511
0.000322525
0.00032354
0.000324554
0.000325568
0.000326582
0.000327597
0.000328611
0.000329625
0.000330639
0.000331654
0.000332668
0.000333682
0.000334696
0.000335711
0.000336725
0.000337739
0.000338753
0.000339768
0.000340782
0.000341796
0.00034281
0.000343824
0.000344839
0.000345853
0.000346867
0.000347881
0.000348896
0.00034991
0.000350924
0.000351938
0.000352953
0.000353967
0.000354981
0.000355995
0.00035701
0.000358024
0.000359038
0.000360052
0.000361067
0.000362081
0.000363095
0.000364109
0.000365124
0.000366138
0.000367152
0.000368166
0.00036918
0.000370195
0.000371209
0.000372223
0.000373237
0.000374252
0.000375266
0.00037628
0.000377294
0.000378309
0.000379323
0.000380337
0.000381351
0.000382366
0.00038338
0.000384394
0.000385408
0.000386423
0.000387437
0.000388451
0.000389465
0.000390479
0.000391494
0.000392508
0.000393522
0.000394536
0.000395551
0.000396565
0.000397579
0.000398593
0.000399608
0.000400622
0.000401636
0.00040265
0.000403665
0.000404679
0.000405693
0.000406707
0.000407722
0.000408736
0.00040975
0.000410764
0.000411779
0.000412793
0.000413807
0.000414821
0.000415835
0.00041685
0.000417864
0.000418878
0.000419892
0.000420907
0.000421921
0.000422935
0.000423949
0.000424964
0.000425978
0.000426992
0.000428006
0.000429021
0.000430035
0.000431049
0.000432063
0.000433078
0.000434092
0.000435106
0.00043612
0.000437134
0.000438149
0.000439163
0.000440177
0.000441191
0.000442206
0.00044322
0.000444234
0.000445248
0.000446263
0.000447277
0.000448291
0.000449305
0.00045032
0.000451334
0.000452348
0.000453362
0.000454377
0.000455391
0.000456405
0.000457419
0.000458434
0.000459448
0.000460462
0.000461476
0.00046249
0.000463505
0.000464519
0.000465533
0.000466547
0.000467562
0.000468576
0.00046959
0.000470604
0.000471619
0.000472633
0.000473647
0.000474661
0.000475676
0.00047669
0.000477704
0.000478718
0.000479733
0.000480747
0.000481761
0.000482775
0.00048379
0.000484804
0.000485818
0.000486832
0.000487846
0.000488861
0.000489875
0.000490889
0.000491903
0.000492918
0.000493932
0.000494946
0.00049596
0.000496974
0.000497989
0.000499003
0.000500017
0.000501031
0.000502045
0.00050306
0.000504074
0.000505088
0.000506102
0.000507116
0.000508131
0.000509145
0.000510159
0.000511173
0.000512188
0.000513202
0.000514216
0.00051523
0.000516244
0.000517259
0.000518273
0.000519287
0.000520301
0.000521315
0.00052233
0.000523344
0.000524358
0.000525372
0.000526386
0.000527401
0.000528415
0.000529429
0.000530443
0.000531458
0.000532472
0.000533486
0.0005345
0.000535514
0.000536529
0.000537543
0.000538557
0.000539571
0.000540585
0.0005416
0.000542614
0.000543628
0.000544642
0.000545656
0.000546671
0.000547685
0.000548699
0.000549713
0.000550728
0.000551742
0.000552756
0.00055377
0.000554784
0.000555799
0.000556813
0.000557827
0.000558841
0.000559855
0.00056087
0.000561884
0.000562898
0.000563912
0.000564926
0.000565941
0.000566955
0.000567969
0.000568983
0.000569998
0.000571012
0.000572026
0.00057304
0.000574054
0.000575069
0.000576083
0.000577097
0.000578111
0.000579125
0.00058014
0.000581154
0.000582168
0.000583182
0.000584196
0.000585211
0.000586225
0.000587239
0.000588253
0.000589268
0.000590282
0.000591296
0.00059231
0.000593324
0.000594339
0.000595353
0.000596367
0.000597381
0.000598395
0.00059941
0.000600424
0.000601438
0.000602452
0.000603466
0.000604481
0.000605495
0.000606509
0.000607523
0.000608538
0.000609552
0.000610566
0.00061158
0.000612594
0.000613609
0.000614623
0.000615637
0.000616651
0.000617665
0.00061868
0.000619694
0.000620708
0.000621722
0.000622736
0.000623751
0.000624765
0.000625779
0.000626793
0.000627808
0.000628822
0.000629836
0.00063085
0.000631864
0.000632879
0.000633893
0.000634907
0.000635921
0.000636935
0.00063795
0.000638964
0.000639978
0.000640992
0.000642006
0.000643021
0.000644035
0.000645049
0.000646063
0.000647078
0.000648092
0.000649106
0.00065012
0.000651134
0.000652149
0.000653163
0.000654177
0.000655191
0.000656205
0.00065722
0.000658234
0.000659248
0.000660262
0.000661276
0.000662291
0.000663305
0.000664319
0.000665333
0.000666348
0.000667362
0.000668376
0.00066939
0.000670404
0.000671419
0.000672433
0.000673447
0.000674461
0.000675475
0.00067649
0.000677504
0.000678518
0.000679532
0.000680546
0.000681561
0.000682575
0.000683589
0.000684603
0.000685618
0.000686632
0.000687646
0.00068866
0.000689674
0.000690689
0.000691703
0.000692717
0.000693731
0.000694745
0.00069576
0.000696774
0.000697788
0.000698802
0.000699816
0.000700831
0.000701845
0.000702859
0.000703873
0.000704887
0.000705902
0.000706916
0.00070793
0.000708944
0.000709959
0.000710973
0.000711987
0.000713001
0.000714015
0.00071503
0.000716044
0.000717058
0.000718072
0.000719086
0.000720101
0.000721115
0.000722129
0.000723143
0.000724157
0.000725172
0.000726186
0.0007272
0.000728214
0.000729229
0.000730243
0.000731257
0.000732271
0.000733285
0.0007343
0.000735314
0.000736328
0.000737342
0.000738356
0.000739371
0.000740385
0.000741399
0.000742413
0.000743427
0.000744442
0.000745456
0.00074647
0.000747484
0.000748499
0.000749513
0.000750527
0.000751541
0.000752555
0.00075357
0.000754584
0.000755598
0.000756612
0.000757626
0.000758641
0.000759655
0.000760669
0.000761683
0.000762697
0.000763712
0.000764726
0.00076574
0.000766754
0.000767769
0.000768783
0.000769797
0.000770811
0.000771825
0.00077284
0.000773854
0.000774868
0.000775882
0.000776896
0.000777911
0.000778925
0.000779939
0.000780953
0.000781967
0.000782982
0.000783996
0.00078501
0.000786024
0.000787039
0.000788053
0.000789067
0.000790081
0.000791095
0.00079211
0.000793124
0.000794138
0.000795152
0.000796166
0.000797181
0.000798195
0.000799209
0.000800223
0.000801237
0.000802252
0.000803266
0.00080428
0.000805294
0.000806309
0.000807323
0.000808337
0.000809351
0.000810365
0.00081138
0.000812394
0.000813408
0.000814422
0.000815436
0.000816451
0.000817465
0.000818479
0.000819493
0.000820507
0.000821522
0.000822536
0.00082355
0.000824564
0.000825579
0.000826593
0.000827607
0.000828621
0.000829635
0.00083065
0.000831664
0.000832678
0.000833692
0.000834706
0.000835721
0.000836735
0.000837749
0.000838763
0.000839777
0.000840792
0.000841806
0.00084282
0.000843834
0.000844849
0.000845863
0.000846877
0.000847891
0.000848905
0.00084992
0.000850934
0.000851948
0.000852962
0.000853976
0.000854991
0.000856005
0.000857019
0.000858033
0.000859047
0.000860062
0.000861076
0.00086209
0.000863104
0.000864119
0.000865133
0.000866147
0.000867161
0.000868175
0.00086919
0.000870204
0.000871218
0.000872232
0.000873246
0.000874261
0.000875275
0.000876289
0.000877303
0.000878317
0.000879332
0.000880346
0.00088136
0.000882374
0.000883389
0.000884403
0.000885417
0.000886431
0.000887445
0.00088846
0.000889474
0.000890488
0.000891502
0.000892516
0.000893531
0.000894545
0.000895559
0.000896573
0.000897587
0.000898602
0.000899616
0.00090063
0.000901644
0.000902659
0.000903673
0.000904687
0.000905701
0.000906715
0.00090773
0.000908744
0.000909758
0.000910772
0.000911786
0.000912801
0.000913815
0.000914829
0.000915843
0.000916857
0.000917872
0.000918886
0.0009199
0.000920914
0.000921928
0.000922943
0.000923957
0.000924971
0.000925985
0.000927
0.000928014
0.000929028
0.000930042
0.000931056
0.000932071
0.000933085
0.000934099
0.000935113
0.000936127
0.000937142
0.000938156
0.00093917
0.000940184
0.000941198
0.000942213
0.000943227
0.000944241
0.000945255
0.00094627
0.000947284
0.000948298
0.000949312
0.000950326
0.000951341
0.000952355
0.000953369
0.000954383
0.000955397
0.000956412
0.000957426
0.00095844
0.000959454
0.000960468
0.000961483
0.000962497
0.000963511
0.000964525
0.00096554
0.000966554
0.000967568
0.000968582
0.000969596
0.000970611
0.000971625
0.000972639
0.000973653
0.000974667
0.000975682
0.000976696
0.00097771
0.000978724
0.000979739
0.000980753
0.000981767
0.000982781
0.000983795
0.00098481
0.000985824
0.000986838
0.000987852
0.000988866
0.000989881
0.000990895
0.000991908
0.000992921
0.000993933
0.000994946
0.000995957
0.000996969
0.00099798
0.00099899
0.001
]) if i % 17 == 0], 
            [v for (i, v) in enumerate([0
-3.07179E-06
-1.22862E-05
-2.76403E-05
-4.91298E-05
-7.67486E-05
-0.000110489
-0.000150342
-0.000196296
-0.00024834
-0.000306459
-0.000370637
-0.000440857
-0.0005171
-0.000599345
-0.000687569
-0.000781749
-0.00088186
-0.000987875
-0.00109976
-0.0012175
-0.00134105
-0.00147038
-0.00160546
-0.00174624
-0.0018927
-0.0020448
-0.00220249
-0.00236573
-0.00253448
-0.00270869
-0.00288832
-0.00307333
-0.00326365
-0.00345925
-0.00366007
-0.00386605
-0.00407716
-0.00429332
-0.0045145
-0.00474063
-0.00497167
-0.00520756
-0.00544825
-0.00569369
-0.00594384
-0.00619862
-0.00645801
-0.00672193
-0.00699035
-0.0072632
-0.00754044
-0.007822
-0.00810784
-0.00839789
-0.00869209
-0.00899039
-0.00929273
-0.00959904
-0.00990926
-0.0102233
-0.0105412
-0.0108628
-0.0111881
-0.011517
-0.0118494
-0.0121853
-0.0125247
-0.0128674
-0.0132133
-0.0135624
-0.0139144
-0.0142693
-0.0146268
-0.0149866
-0.0153485
-0.0157121
-0.016077
-0.0164428
-0.0168091
-0.0171757
-0.0175422
-0.0179084
-0.0182745
-0.0186407
-0.0190075
-0.0193757
-0.0197465
-0.0201213
-0.0205016
-0.0208892
-0.0212861
-0.021694
-0.0221145
-0.0225491
-0.0229985
-0.0234634
-0.0239434
-0.0244381
-0.0249461
-0.0254657
-0.0259948
-0.0265311
-0.0270719
-0.0276147
-0.0281569
-0.028696
-0.0292296
-0.0297557
-0.0302721
-0.0307769
-0.0312682
-0.0317441
-0.0322029
-0.032643
-0.0330628
-0.0334612
-0.0338371
-0.0341898
-0.034519
-0.0348248
-0.0351078
-0.0353687
-0.0356085
-0.0358286
-0.0360302
-0.0362146
-0.0363833
-0.0365373
-0.0366777
-0.0368057
-0.0369221
-0.0370278
-0.0371237
-0.0372106
-0.0372895
-0.0373613
-0.0374269
-0.037487
-0.0375426
-0.0375945
-0.0376433
-0.0376899
-0.0377347
-0.0377786
-0.037822
-0.0378658
-0.0379106
-0.0379572
-0.0380062
-0.0380585
-0.0381148
-0.0381759
-0.0382424
-0.0383151
-0.0383945
-0.0384813
-0.0385761
-0.0386794
-0.0387918
-0.0389137
-0.0390456
-0.0391879
-0.039341
-0.0395052
-0.0396808
-0.0398681
-0.0400673
-0.0402786
-0.040502
-0.0407378
-0.0409859
-0.0412465
-0.0415195
-0.0418049
-0.0421028
-0.0424132
-0.0427361
-0.0430716
-0.0434197
-0.0437806
-0.0441545
-0.0445414
-0.0449415
-0.0453547
-0.0457811
-0.0462205
-0.0466728
-0.0471377
-0.0476149
-0.0481041
-0.0486049
-0.0491169
-0.0496398
-0.0501734
-0.0507174
-0.0512714
-0.0518353
-0.0524087
-0.0529913
-0.053583
-0.0541833
-0.054792
-0.0554087
-0.0560333
-0.0566655
-0.0573051
-0.0579518
-0.0586053
-0.0592655
-0.0599319
-0.0606043
-0.0612822
-0.0619651
-0.0626525
-0.063344
-0.064039
-0.0647371
-0.0654378
-0.0661409
-0.0668459
-0.0675528
-0.068261
-0.0689706
-0.0696811
-0.0703923
-0.0711039
-0.0718155
-0.0725268
-0.0732373
-0.0739468
-0.0746547
-0.0753608
-0.0760648
-0.0767663
-0.0774651
-0.078161
-0.0788535
-0.0795425
-0.0802275
-0.0809081
-0.0815839
-0.0822544
-0.0829193
-0.083578
-0.0842302
-0.0848756
-0.0855139
-0.086145
-0.0867686
-0.0873847
-0.087993
-0.0885935
-0.089186
-0.0897702
-0.0903457
-0.0909124
-0.0914697
-0.0920172
-0.0925546
-0.0930813
-0.0935967
-0.0941004
-0.0945917
-0.09507
-0.0955347
-0.095985
-0.0964205
-0.0968405
-0.0972445
-0.0976324
-0.098004
-0.0983594
-0.0986989
-0.0990231
-0.0993327
-0.0996284
-0.0999111
-0.100182
-0.100441
-0.100689
-0.100928
-0.101157
-0.101376
-0.101586
-0.101786
-0.101977
-0.102157
-0.102326
-0.102483
-0.102626
-0.102756
-0.10287
-0.102967
-0.103046
-0.103106
-0.103145
-0.103164
-0.103161
-0.103136
-0.103089
-0.10302
-0.102928
-0.102814
-0.102678
-0.102519
-0.102338
-0.102135
-0.101909
-0.101662
-0.101394
-0.101104
-0.100794
-0.100463
-0.100113
-0.0997426
-0.0993533
-0.0989454
-0.0985194
-0.0980758
-0.0976154
-0.0971388
-0.096647
-0.0961409
-0.0956215
-0.0950898
-0.0945471
-0.0939942
-0.0934322
-0.0928619
-0.0922842
-0.0916997
-0.0911089
-0.0905124
-0.0899104
-0.0893033
-0.0886913
-0.0880744
-0.0874527
-0.0868262
-0.0861948
-0.0855582
-0.0849162
-0.0842686
-0.0836148
-0.0829545
-0.0822872
-0.0816123
-0.0809292
-0.0802374
-0.0795361
-0.0788249
-0.078103
-0.07737
-0.0766251
-0.0758677
-0.0750974
-0.0743134
-0.0735153
-0.0727023
-0.0718741
-0.0710299
-0.0701695
-0.0692924
-0.0683984
-0.0674872
-0.0665588
-0.0656133
-0.0646506
-0.063671
-0.0626747
-0.0616619
-0.060633
-0.0595883
-0.0585281
-0.0574529
-0.056363
-0.055259
-0.0541413
-0.0530104
-0.0518667
-0.0507109
-0.0495434
-0.0483648
-0.0471757
-0.0459765
-0.044768
-0.0435509
-0.0423258
-0.0410936
-0.0398551
-0.0386112
-0.0373629
-0.0361111
-0.0348568
-0.0336009
-0.0323443
-0.031088
-0.0298327
-0.0285793
-0.0273285
-0.0260811
-0.0248379
-0.0235995
-0.0223668
-0.0211404
-0.0199212
-0.0187099
-0.0175073
-0.0163141
-0.0151312
-0.0139591
-0.0127987
-0.0116504
-0.0105148
-0.00939249
-0.00828394
-0.00718961
-0.00610998
-0.00504549
-0.00399659
-0.00296369
-0.0019472
-0.000947477
3.51463E-05
0.00100038
0.00194799
0.00287773
0.00378942
0.00468287
0.00555789
0.00641433
0.00725199
0.00807075
0.00887045
0.00965101
0.0104124
0.0111545
0.0118774
0.0125811
0.0132658
0.0139315
0.0145784
0.0152066
0.0158165
0.0164082
0.0169822
0.0175387
0.0180782
0.0186011
0.019108
0.0195993
0.0200757
0.0205377
0.0209859
0.0214208
0.0218429
0.022253
0.0226514
0.0230386
0.023415
0.0237809
0.0241366
0.024482
0.0248172
0.025142
0.0254561
0.0257591
0.0260507
0.0263304
0.0265978
0.0268525
0.0270944
0.0273231
0.0275387
0.0277411
0.0279307
0.0281076
0.0282724
0.0284255
0.0285679
0.0287002
0.0288234
0.0289385
0.0290465
0.0291486
0.0292456
0.0293387
0.0294285
0.0295161
0.0296019
0.0296865
0.0297703
0.0298534
0.0299361
0.0300182
0.0300997
0.0301802
0.0302593
0.0303367
0.0304117
0.0304838
0.0305523
0.0306165
0.0306757
0.0307291
0.0307759
0.0308154
0.0308469
0.0308695
0.0308828
0.0308861
0.0308789
0.0308607
0.0308313
0.0307904
0.0307377
0.0306731
0.0305966
0.0305081
0.0304077
0.0302955
0.0301715
0.0300361
0.0298895
0.0297319
0.0295638
0.0293853
0.029197
0.0289991
0.0287918
0.0285755
0.0283503
0.0281165
0.0278741
0.0276233
0.0273641
0.0270966
0.0268209
0.0265369
0.0262448
0.0259446
0.0256363
0.0253199
0.0249956
0.0246634
0.0243233
0.0239755
0.0236201
0.0232571
0.0228868
0.0225091
0.0221242
0.021732
0.0213325
0.0209255
0.020511
0.0200884
0.0196576
0.0192179
0.0187688
0.0183097
0.01784
0.0173587
0.0168653
0.0163589
0.015839
0.0153047
0.0147555
0.0141909
0.0136103
0.0130134
0.0123996
0.0117686
0.01112
0.0104535
0.00976874
0.00906542
0.00834325
0.00760199
0.00684141
0.00606134
0.00526163
0.00444215
0.00360283
0.00274362
0.00186453
0.000965603
4.69349E-05
-0.000891311
-0.00184891
-0.00282557
-0.00382094
-0.0048346
-0.00586607
-0.00691483
-0.00798032
-0.00906191
-0.010159
-0.0112708
-0.0123967
-0.0135359
-0.0146878
-0.0158514
-0.0170261
-0.0182111
-0.0194057
-0.0206091
-0.0218207
-0.0230397
-0.0242654
-0.0254972
-0.0267344
-0.0279762
-0.029222
-0.0304711
-0.0317228
-0.0329764
-0.0342312
-0.0354867
-0.0367421
-0.0379971
-0.039251
-0.0405035
-0.041754
-0.0430023
-0.0442479
-0.0454907
-0.0467303
-0.0479664
-0.049199
-0.0504277
-0.0516525
-0.0528731
-0.0540892
-0.0553009
-0.0565077
-0.0577095
-0.0589059
-0.0600968
-0.0612817
-0.0624604
-0.0636324
-0.0647974
-0.0659551
-0.0671051
-0.0682473
-0.0693814
-0.0705072
-0.0716249
-0.0727344
-0.0738359
-0.0749296
-0.0760158
-0.077095
-0.0781673
-0.0792334
-0.0802936
-0.0813484
-0.0823981
-0.0834433
-0.0844843
-0.0855214
-0.086555
-0.0875853
-0.0886124
-0.0896365
-0.0906574
-0.0916751
-0.0926894
-0.0936998
-0.0947062
-0.095708
-0.0967047
-0.0976958
-0.0986807
-0.0996588
-0.100629
-0.101592
-0.102546
-0.10349
-0.104425
-0.105348
-0.106261
-0.107161
-0.108049
-0.108924
-0.109786
-0.110635
-0.111469
-0.112289
-0.113095
-0.113886
-0.114662
-0.115424
-0.116171
-0.116903
-0.117621
-0.118323
-0.119011
-0.119683
-0.120341
-0.120983
-0.12161
-0.122221
-0.122817
-0.123397
-0.123961
-0.124508
-0.125039
-0.125552
-0.126048
-0.126526
-0.126984
-0.127424
-0.127842
-0.12824
-0.128615
-0.128968
-0.129296
-0.1296
-0.129878
-0.130129
-0.130353
-0.130548
-0.130713
-0.130848
-0.130951
-0.131023
-0.131063
-0.131069
-0.131043
-0.130983
-0.13089
-0.130763
-0.130603
-0.130409
-0.130183
-0.129923
-0.129631
-0.129307
-0.128951
-0.128565
-0.128148
-0.127702
-0.127228
-0.126725
-0.126196
-0.12564
-0.125059
-0.124453
-0.123823
-0.123169
-0.122493
-0.121794
-0.121074
-0.120332
-0.11957
-0.118788
-0.117987
-0.117167
-0.116328
-0.115472
-0.114598
-0.113708
-0.112802
-0.11188
-0.110942
-0.10999
-0.109024
-0.108043
-0.107049
-0.106041
-0.10502
-0.103987
-0.102941
-0.101883
-0.100813
-0.0997322
-0.0986397
-0.0975361
-0.0964217
-0.0952967
-0.0941614
-0.0930158
-0.0918603
-0.090695
-0.0895202
-0.088336
-0.0871427
-0.0859404
-0.0847296
-0.0835102
-0.0822828
-0.0810475
-0.0798047
-0.0785548
-0.0772983
-0.0760355
-0.074767
-0.0734933
-0.0722151
-0.0709327
-0.0696469
-0.0683583
-0.0670673
-0.0657746
-0.0644809
-0.0631867
-0.0618927
-0.0605996
-0.0593081
-0.0580189
-0.0567328
-0.0554506
-0.054173
-0.0529009
-0.0516351
-0.0503764
-0.0491256
-0.0478834
-0.0466506
-0.045428
-0.0442162
-0.0430159
-0.0418276
-0.0406519
-0.0394894
-0.0383402
-0.037205
-0.0360838
-0.0349769
-0.0338845
-0.0328067
-0.0317435
-0.0306949
-0.029661
-0.0286417
-0.027637
-0.0266469
-0.0256713
-0.0247104
-0.0237641
-0.0228325
-0.0219157
-0.0210139
-0.0201272
-0.0192557
-0.0183994
-0.0175585
-0.016733
-0.0159228
-0.0151279
-0.014348
-0.0135829
-0.0128325
-0.0120962
-0.0113737
-0.0106646
-0.00996834
-0.00928428
-0.00861187
-0.00795044
-0.00729933
-0.00665785
-0.0060253
-0.00540099
-0.00478424
-0.00417436
-0.00357071
-0.00297267
-0.00237963
-0.00179104
-0.00120639
-0.000625189
-4.70206E-05
0.00052849
0.00110166
0.00167274
0.00224193
0.00280935
0.00337506
0.00393905
0.00450126
0.00506154
0.0056197
0.00617546
0.00672853
0.00727854
0.00782512
0.00836785
0.00890632
0.00944011
0.00996884
0.0104921
0.0110096
0.0115209
0.0120259
0.0125242
0.0130157
0.0135001
0.0139773
0.0144472
0.0149097
0.0153645
0.0158117
0.016251
0.0166824
0.0171057
0.0175208
0.0179276
0.018326
0.0187158
0.019097
0.0194695
0.0198332
0.020188
0.020534
0.020871
0.0211992
0.0215185
0.0218289
0.0221303
0.0224227
0.0227061
0.0229804
0.0232453
0.0235008
0.0237466
0.0239824
0.024208
0.0244229
0.0246268
0.0248193
0.0249999
0.0251682
0.0253236
0.0254656
0.0255938
0.0257077
0.0258069
0.0258908
0.0259592
0.0260115
0.0260475
0.0260669
0.0260695
0.0260551
0.0260237
0.0259753
0.0259099
0.0258276
0.0257287
0.0256135
0.0254823
0.0253354
0.0251734
0.0249967
0.0248058
0.0246015
0.0243842
0.0241548
0.0239138
0.023662
0.0234002
0.0231291
0.0228496
0.0225623
0.022268
0.0219675
0.0216614
0.0213504
0.0210351
0.0207158
0.0203933
0.0200677
0.0197394
0.0194089
0.0190764
0.018742
0.018406
0.0180683
0.0177292
0.0173886
0.0170465
0.0167029
0.0163578
]) if i % 17 == 0], 
            ]
        
        # reference[:, 2] .*= phun("in")
        # @gp  "reset" :-

        # @gp  :- "set terminal cairolatex standalone pdf size 16cm,10.5cm " :-
        # @gp  :- "set output 'fire_severity1.tex' "  :-
        # @gp "clear"
        @gp "set key top left box  font \"Times-Roman\"" :-
        @gp  :- reference_Bathe[:, 1] reference_Bathe[:, 2] " lw 2 lc rgb 'black' with points title 'Bathe' "  :-
        @gp  :- reference_Belytschko[:, 1] reference_Belytschko[:, 2] " lw 2 lc rgb 'black' with points title 'Belytschko' "  :-
        @gp  :- reference_Tabiei[:, 1] reference_Tabiei[:, 2] " lw 2 lc rgb 'black' with points title 'Tabiei' "  :-
        @gp  :- reference_S4_impl[1]/phun("Milli*s")  reference_S4_impl[2] " lw 2 lc rgb 'black' with points title 'S4 impl' "  :-
        @gp  :- reference_S4_expl[1]/phun("Milli*s")  reference_S4_expl[2] " lw 2 lc rgb 'black' with points title 'S4 expl' "  :-
        @gp  :- collect(0.0:dt:(nsteps*dt))/phun("Milli*s")  cdeflections/phun("in") " lw 2 lc rgb '$color' with lines title 'Present' "  :-

        @gp  :- "set tics font \"Times-Roman\"" :-
        @gp  :- "set xlabel 'Time [ms]' font \"Times-Roman\"" :-
        @gp  :- "set ylabel 'Deflection [in]' font \"Times-Roman\"" :-
        @gp  :- "set title 'Spherical cap, deflection at the center' font \"Times-Roman\""
        # @gp  :- "set output "  
        save(term="cairolatex pdf input color dashed size 5in,3.3in", output="spherical_cap_expl_$n.tex")

        # Visualization
        @info "Dumping visualization"
        times = Float64[]
        vectors = []
        for i in 1:length(displacements)
            scattersysvec!(dchi, displacements[i])
            push!(vectors, ("U", deepcopy(dchi.values[:, 1:3])))
            push!(times, i*dt*nbtw)
        end
        vtkwritecollection("spherical_cap_expl_$n", fens, fes, times; vectors = vectors)
    end
end

function test_parallel_csr(ns = [4*64], nthr = 0)
    @info "Clamped cylinder: parallel CSR"
    for n in ns
        _execute_parallel_csr(n, nthr)
    end
    return true
end

function allrun(ns = [8])
    println("#####################################################")
    println("# test_parallel_csr ")
    test_parallel_csr(ns)
    return true
end # function allrun

@info "All examples may be executed with "
println("using .$(@__MODULE__); $(@__MODULE__).allrun()")

end # module
nothing
