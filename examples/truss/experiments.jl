using LinearAlgebra
x = [
    0 -0.5 0.5
    3 2 -1
]
# x = [
#     -1.0 0.0 0.0
#     1.0 0.0 0.0
# ]
# x = [
#     0.0 -1.0 0.0 
#     0.0 1.0 0.0 
# ]
# x = [
#     -1.0 0.0 0.0
#     1.0 0.0 0.0
# ]
# x = [
#     0.0 0.0 0.0
#     1.0 1.0 0.0
# ]
# x = [
#     0.0 0.0 0.0
#     1.0  0.0 1.0
# ]

n = x[2, :] - x[1, :]
L = norm(n)
n = n/L

F = 100.0

subm = I - n*n'

K_G = F/L*[subm -subm; -subm subm]

# alternative
K_Gc = F / L * [
    0.0  -0.0  -0.0 -0.0   0.0  -0.0
    0.0  1.0  -0.0 -0.0   -1.0  -0.0
    -0.0   0.0  1.0 -0.0  -0.0   -1.0
    0.0  -0.0  -0.0 -0.0   0.0  -0.0
    0.0  -1.0  -0.0 -0.0   1.0  -0.0
    -0.0   0.0  -1.0 -0.0  -0.0   1.0
]

# n = [1.0, 0.0, 0.0]
# subm = I - n*n'
# K_Gc = F/L*[subm -subm; -subm subm]

Z = zeros(3, 3)
T_1 = zeros(3, 3)
@. T_1[:, 1] = n 
T_1[:, 1] ./= norm(T_1[:, 1])
T_1[:, 2] = cross(n, Float64[0, 0, -1])
T_1[:, 2] ./= norm(T_1[:, 2])
T_1[:, 3] = cross(T_1[:, 1], T_1[:, 2])
@show norm(T_1'*T_1 - I)
T = [T_1 Z; Z T_1]
K_G2 = T*K_Gc*T'

# @show K_G - K_G2
@show norm(K_G - K_G2)
